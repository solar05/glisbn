-module(glisbn).
-compile([no_auto_import, nowarn_unused_vars, nowarn_unused_function, nowarn_nomatch]).

-export([isbn10_checkdigit/1, isbn13_checkdigit/1, is_checkdigit_valid/1, is_valid/1, isbn10_to_13/1, isbn13_to_10/1, get_checkdigit/1, get_prefix/1, get_publisher_zone/1, get_registrant_element/1, get_publication_element/1, hyphenate/1, is_hyphens_correct/1]).
-export_type([isbn_error/0]).

-type isbn_error() :: invalid_isbn |
    invalid_checkdigit |
    invalid_length |
    registrant_not_found.

-spec is_length_correct(binary()) -> boolean().
is_length_correct(Isbn) ->
    Length = gleam@string:length(Isbn),
    ((Length =:= 10) orelse (Length =:= 13)) orelse (Length =:= 17).

-spec drop_chars(binary(), integer()) -> binary().
drop_chars(Str, Amount) ->
    gleam@string:slice(Str, Amount, gleam@string:length(Str)).

-spec is_digit(binary()) -> boolean().
is_digit(Ch) ->
    _pipe = <<"0123456789"/utf8>>,
    gleam_stdlib:contains_string(_pipe, Ch).

-spec normalize(binary()) -> binary().
normalize(Isbn) ->
    _pipe = Isbn,
    _pipe@1 = gleam@string:split(_pipe, <<""/utf8>>),
    _pipe@2 = gleam@list:filter(
        _pipe@1,
        fun(Ch) -> is_digit(Ch) orelse (Ch =:= <<"X"/utf8>>) end
    ),
    gleam@string:join(_pipe@2, <<""/utf8>>).

-spec isbn10_checkdigit(binary()) -> {ok, binary()} | {error, isbn_error()}.
isbn10_checkdigit(Isbn) ->
    Normalized_isbn = normalize(Isbn),
    Length = gleam@string:length(Normalized_isbn),
    gleam@bool:guard(
        (Length < 8) orelse (Length > 10),
        {error, invalid_isbn},
        fun() ->
            _assert_subject@1 = begin
                _pipe = Normalized_isbn,
                _pipe@1 = gleam@string:slice(_pipe, 0, 9),
                _pipe@2 = gleam@string:split(_pipe@1, <<""/utf8>>),
                _pipe@3 = gleam@list:map(
                    _pipe@2,
                    fun(Num) ->
                        _assert_subject = gleam@int:parse(Num),
                        {ok, Res} = case _assert_subject of
                            {ok, _} -> _assert_subject;
                            _assert_fail ->
                                erlang:error(#{gleam_error => let_assert,
                                            message => <<"Assertion pattern match failed"/utf8>>,
                                            value => _assert_fail,
                                            module => <<"glisbn"/utf8>>,
                                            function => <<"isbn10_checkdigit"/utf8>>,
                                            line => 88})
                        end,
                        Res
                    end
                ),
                _pipe@4 = gleam@list:index_map(
                    _pipe@3,
                    fun(Index, Value) -> (10 - Value) * Index end
                ),
                gleam@list:reduce(_pipe@4, fun(Acc, X) -> Acc + X end)
            end,
            {ok, Nsum} = case _assert_subject@1 of
                {ok, _} -> _assert_subject@1;
                _assert_fail@1 ->
                    erlang:error(#{gleam_error => let_assert,
                                message => <<"Assertion pattern match failed"/utf8>>,
                                value => _assert_fail@1,
                                module => <<"glisbn"/utf8>>,
                                function => <<"isbn10_checkdigit"/utf8>>,
                                line => 83})
            end,
            _assert_subject@2 = gleam@int:modulo(Nsum, 11),
            {ok, First_part} = case _assert_subject@2 of
                {ok, _} -> _assert_subject@2;
                _assert_fail@2 ->
                    erlang:error(#{gleam_error => let_assert,
                                message => <<"Assertion pattern match failed"/utf8>>,
                                value => _assert_fail@2,
                                module => <<"glisbn"/utf8>>,
                                function => <<"isbn10_checkdigit"/utf8>>,
                                line => 94})
            end,
            _assert_subject@3 = gleam@int:modulo(11 - First_part, 11),
            {ok, Final_part} = case _assert_subject@3 of
                {ok, _} -> _assert_subject@3;
                _assert_fail@3 ->
                    erlang:error(#{gleam_error => let_assert,
                                message => <<"Assertion pattern match failed"/utf8>>,
                                value => _assert_fail@3,
                                module => <<"glisbn"/utf8>>,
                                function => <<"isbn10_checkdigit"/utf8>>,
                                line => 95})
            end,
            case Final_part of
                10 ->
                    {ok, <<"X"/utf8>>};

                _ ->
                    {ok, gleam@int:to_string(Final_part)}
            end
        end
    ).

-spec isbn13_checkdigit(binary()) -> {ok, binary()} | {error, isbn_error()}.
isbn13_checkdigit(Isbn) ->
    Normalized_isbn = normalize(Isbn),
    Length = gleam@string:length(Normalized_isbn),
    gleam@bool:guard(
        (Length < 11) orelse (Length > 13),
        {error, invalid_isbn},
        fun() ->
            _assert_subject@1 = begin
                _pipe = Normalized_isbn,
                _pipe@1 = gleam@string:slice(_pipe, 0, 12),
                _pipe@2 = gleam@string:split(_pipe@1, <<""/utf8>>),
                _pipe@3 = gleam@list:map(
                    _pipe@2,
                    fun(Num) ->
                        _assert_subject = gleam@int:parse(Num),
                        {ok, Res} = case _assert_subject of
                            {ok, _} -> _assert_subject;
                            _assert_fail ->
                                erlang:error(#{gleam_error => let_assert,
                                            message => <<"Assertion pattern match failed"/utf8>>,
                                            value => _assert_fail,
                                            module => <<"glisbn"/utf8>>,
                                            function => <<"isbn13_checkdigit"/utf8>>,
                                            line => 116})
                        end,
                        Res
                    end
                ),
                _pipe@4 = gleam@list:index_map(
                    _pipe@3,
                    fun(Index, Value) -> case gleam@int:is_odd(Value) of
                            true ->
                                Index * 3;

                            false ->
                                Index
                        end end
                ),
                gleam@list:reduce(_pipe@4, fun(Acc, X) -> Acc + X end)
            end,
            {ok, Nsum} = case _assert_subject@1 of
                {ok, _} -> _assert_subject@1;
                _assert_fail@1 ->
                    erlang:error(#{gleam_error => let_assert,
                                message => <<"Assertion pattern match failed"/utf8>>,
                                value => _assert_fail@1,
                                module => <<"glisbn"/utf8>>,
                                function => <<"isbn13_checkdigit"/utf8>>,
                                line => 111})
            end,
            _assert_subject@2 = gleam@int:modulo(Nsum, 10),
            {ok, First_part} = case _assert_subject@2 of
                {ok, _} -> _assert_subject@2;
                _assert_fail@2 ->
                    erlang:error(#{gleam_error => let_assert,
                                message => <<"Assertion pattern match failed"/utf8>>,
                                value => _assert_fail@2,
                                module => <<"glisbn"/utf8>>,
                                function => <<"isbn13_checkdigit"/utf8>>,
                                line => 127})
            end,
            Final_part = 10 - First_part,
            case Final_part of
                10 ->
                    {ok, <<"0"/utf8>>};

                _ ->
                    {ok, gleam@int:to_string(Final_part)}
            end
        end
    ).

-spec is_checkdigit_valid(binary()) -> boolean().
is_checkdigit_valid(Isbn) ->
    Normalized_isbn = normalize(Isbn),
    Length = gleam@string:length(Normalized_isbn),
    gleam@bool:guard(
        (Length < 8) orelse (Length > 13),
        false,
        fun() ->
            _assert_subject = case gleam@string:length(Normalized_isbn) of
                10 ->
                    isbn10_checkdigit(Normalized_isbn);

                _ ->
                    isbn13_checkdigit(Normalized_isbn)
            end,
            {ok, Digit} = case _assert_subject of
                {ok, _} -> _assert_subject;
                _assert_fail ->
                    erlang:error(#{gleam_error => let_assert,
                                message => <<"Assertion pattern match failed"/utf8>>,
                                value => _assert_fail,
                                module => <<"glisbn"/utf8>>,
                                function => <<"is_checkdigit_valid"/utf8>>,
                                line => 68})
            end,
            _assert_subject@1 = gleam@string:last(Normalized_isbn),
            {ok, Last_digit} = case _assert_subject@1 of
                {ok, _} -> _assert_subject@1;
                _assert_fail@1 ->
                    erlang:error(#{gleam_error => let_assert,
                                message => <<"Assertion pattern match failed"/utf8>>,
                                value => _assert_fail@1,
                                module => <<"glisbn"/utf8>>,
                                function => <<"is_checkdigit_valid"/utf8>>,
                                line => 73})
            end,
            Digit =:= Last_digit
        end
    ).

-spec is_chars_correct(binary()) -> boolean().
is_chars_correct(Isbn) ->
    _pipe = Isbn,
    _pipe@1 = normalize(_pipe),
    is_length_correct(_pipe@1).

-spec is_valid(binary()) -> boolean().
is_valid(Isbn) ->
    (is_length_correct(Isbn) andalso is_chars_correct(Isbn)) andalso is_checkdigit_valid(
        Isbn
    ).

-spec is_isbn10(binary()) -> boolean().
is_isbn10(Isbn) ->
    Length = begin
        _pipe = Isbn,
        _pipe@1 = normalize(_pipe),
        gleam@string:length(_pipe@1)
    end,
    Length =:= 10.

-spec is_correct(binary()) -> boolean().
is_correct(Isbn) ->
    _pipe = Isbn,
    _pipe@1 = normalize(_pipe),
    is_valid(_pipe@1).

-spec isbn10_to_13(binary()) -> {ok, binary()} | {error, isbn_error()}.
isbn10_to_13(Isbn) ->
    case is_correct(Isbn) of
        true ->
            Normalized = gleam@string:slice(normalize(Isbn), 0, 9),
            First_chars = <<"978"/utf8, Normalized/binary>>,
            _assert_subject = isbn13_checkdigit(First_chars),
            {ok, Checkdigit} = case _assert_subject of
                {ok, _} -> _assert_subject;
                _assert_fail ->
                    erlang:error(#{gleam_error => let_assert,
                                message => <<"Assertion pattern match failed"/utf8>>,
                                value => _assert_fail,
                                module => <<"glisbn"/utf8>>,
                                function => <<"isbn10_to_13"/utf8>>,
                                line => 141})
            end,
            {ok, <<First_chars/binary, Checkdigit/binary>>};

        false ->
            {error, invalid_isbn}
    end.

-spec isbn13_to_10(binary()) -> {ok, binary()} | {error, isbn_error()}.
isbn13_to_10(Isbn) ->
    case is_correct(Isbn) of
        true ->
            First_chars = begin
                _pipe = Isbn,
                _pipe@1 = normalize(_pipe),
                _pipe@2 = drop_chars(_pipe@1, 3),
                gleam@string:slice(_pipe@2, 0, 9)
            end,
            _assert_subject = isbn10_checkdigit(First_chars),
            {ok, Checkdigit} = case _assert_subject of
                {ok, _} -> _assert_subject;
                _assert_fail ->
                    erlang:error(#{gleam_error => let_assert,
                                message => <<"Assertion pattern match failed"/utf8>>,
                                value => _assert_fail,
                                module => <<"glisbn"/utf8>>,
                                function => <<"isbn13_to_10"/utf8>>,
                                line => 158})
            end,
            {ok, <<First_chars/binary, Checkdigit/binary>>};

        false ->
            {error, invalid_isbn}
    end.

-spec get_checkdigit(binary()) -> {ok, binary()} | {error, isbn_error()}.
get_checkdigit(Isbn) ->
    case is_correct(Isbn) of
        true ->
            _assert_subject = gleam@string:last(Isbn),
            {ok, Result} = case _assert_subject of
                {ok, _} -> _assert_subject;
                _assert_fail ->
                    erlang:error(#{gleam_error => let_assert,
                                message => <<"Assertion pattern match failed"/utf8>>,
                                value => _assert_fail,
                                module => <<"glisbn"/utf8>>,
                                function => <<"get_checkdigit"/utf8>>,
                                line => 191})
            end,
            {ok, Result};

        false ->
            {error, invalid_isbn}
    end.

-spec search_prefix(binary(), binary(), integer()) -> binary().
search_prefix(Prefix, Body, Search_length) ->
    Search_candidate = <<<<Prefix/binary, "-"/utf8>>/binary,
        (gleam@string:slice(Body, 0, Search_length))/binary>>,
    case gleam@list:find(
        [{regions,
                <<"978-0"/utf8>>,
                <<"English language"/utf8>>,
                [[<<"00"/utf8>>, <<"19"/utf8>>],
                    [<<"200"/utf8>>, <<"699"/utf8>>],
                    [<<"7000"/utf8>>, <<"8499"/utf8>>],
                    [<<"85000"/utf8>>, <<"89999"/utf8>>],
                    [<<"900000"/utf8>>, <<"949999"/utf8>>],
                    [<<"9500000"/utf8>>, <<"9999999"/utf8>>]]},
            {regions,
                <<"978-1"/utf8>>,
                <<"English language"/utf8>>,
                [[<<"00"/utf8>>, <<"09"/utf8>>],
                    [<<"100"/utf8>>, <<"399"/utf8>>],
                    [<<"4000"/utf8>>, <<"5499"/utf8>>],
                    [<<"55000"/utf8>>, <<"86979"/utf8>>],
                    [<<"869800"/utf8>>, <<"998999"/utf8>>],
                    [<<"9990000"/utf8>>, <<"9999999"/utf8>>]]},
            {regions,
                <<"978-2"/utf8>>,
                <<"French language"/utf8>>,
                [[<<"00"/utf8>>, <<"19"/utf8>>],
                    [<<"200"/utf8>>, <<"349"/utf8>>],
                    [<<"35000"/utf8>>, <<"39999"/utf8>>],
                    [<<"400"/utf8>>, <<"699"/utf8>>],
                    [<<"7000"/utf8>>, <<"8399"/utf8>>],
                    [<<"84000"/utf8>>, <<"89999"/utf8>>],
                    [<<"900000"/utf8>>, <<"949999"/utf8>>],
                    [<<"9500000"/utf8>>, <<"9999999"/utf8>>]]},
            {regions,
                <<"978-3"/utf8>>,
                <<"German language"/utf8>>,
                [[<<"00"/utf8>>, <<"02"/utf8>>],
                    [<<"030"/utf8>>, <<"033"/utf8>>],
                    [<<"0340"/utf8>>, <<"0369"/utf8>>],
                    [<<"03700"/utf8>>, <<"03999"/utf8>>],
                    [<<"04"/utf8>>, <<"19"/utf8>>],
                    [<<"200"/utf8>>, <<"699"/utf8>>],
                    [<<"7000"/utf8>>, <<"8499"/utf8>>],
                    [<<"85000"/utf8>>, <<"89999"/utf8>>],
                    [<<"900000"/utf8>>, <<"949999"/utf8>>],
                    [<<"9500000"/utf8>>, <<"9539999"/utf8>>],
                    [<<"95400"/utf8>>, <<"96999"/utf8>>],
                    [<<"9700000"/utf8>>, <<"9899999"/utf8>>],
                    [<<"99000"/utf8>>, <<"99499"/utf8>>],
                    [<<"99500"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-4"/utf8>>,
                <<"Japan"/utf8>>,
                [[<<"00"/utf8>>, <<"19"/utf8>>],
                    [<<"200"/utf8>>, <<"699"/utf8>>],
                    [<<"7000"/utf8>>, <<"8499"/utf8>>],
                    [<<"85000"/utf8>>, <<"89999"/utf8>>],
                    [<<"900000"/utf8>>, <<"949999"/utf8>>],
                    [<<"9500000"/utf8>>, <<"9999999"/utf8>>]]},
            {regions,
                <<"978-5"/utf8>>,
                <<"former U.S.S.R"/utf8>>,
                [[<<"00000"/utf8>>, <<"00499"/utf8>>],
                    [<<"0050"/utf8>>, <<"0099"/utf8>>],
                    [<<"01"/utf8>>, <<"19"/utf8>>],
                    [<<"200"/utf8>>, <<"420"/utf8>>],
                    [<<"4210"/utf8>>, <<"4299"/utf8>>],
                    [<<"430"/utf8>>, <<"430"/utf8>>],
                    [<<"4310"/utf8>>, <<"4399"/utf8>>],
                    [<<"440"/utf8>>, <<"440"/utf8>>],
                    [<<"4410"/utf8>>, <<"4499"/utf8>>],
                    [<<"450"/utf8>>, <<"699"/utf8>>],
                    [<<"7000"/utf8>>, <<"8499"/utf8>>],
                    [<<"85000"/utf8>>, <<"89999"/utf8>>],
                    [<<"900000"/utf8>>, <<"909999"/utf8>>],
                    [<<"91000"/utf8>>, <<"91999"/utf8>>],
                    [<<"9200"/utf8>>, <<"9299"/utf8>>],
                    [<<"93000"/utf8>>, <<"94999"/utf8>>],
                    [<<"9500000"/utf8>>, <<"9500999"/utf8>>],
                    [<<"9501"/utf8>>, <<"9799"/utf8>>],
                    [<<"98000"/utf8>>, <<"98999"/utf8>>],
                    [<<"9900000"/utf8>>, <<"9909999"/utf8>>],
                    [<<"9910"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-600"/utf8>>,
                <<"Iran"/utf8>>,
                [[<<"00"/utf8>>, <<"09"/utf8>>],
                    [<<"100"/utf8>>, <<"499"/utf8>>],
                    [<<"5000"/utf8>>, <<"8999"/utf8>>],
                    [<<"90000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-601"/utf8>>,
                <<"Kazakhstan"/utf8>>,
                [[<<"00"/utf8>>, <<"19"/utf8>>],
                    [<<"200"/utf8>>, <<"699"/utf8>>],
                    [<<"7000"/utf8>>, <<"7999"/utf8>>],
                    [<<"80000"/utf8>>, <<"84999"/utf8>>],
                    [<<"85"/utf8>>, <<"99"/utf8>>]]},
            {regions,
                <<"978-602"/utf8>>,
                <<"Indonesia"/utf8>>,
                [[<<"00"/utf8>>, <<"07"/utf8>>],
                    [<<"0800"/utf8>>, <<"0899"/utf8>>],
                    [<<"0900"/utf8>>, <<"1099"/utf8>>],
                    [<<"1100"/utf8>>, <<"1199"/utf8>>],
                    [<<"1200"/utf8>>, <<"1399"/utf8>>],
                    [<<"14000"/utf8>>, <<"14999"/utf8>>],
                    [<<"1500"/utf8>>, <<"1699"/utf8>>],
                    [<<"17000"/utf8>>, <<"17999"/utf8>>],
                    [<<"18000"/utf8>>, <<"18999"/utf8>>],
                    [<<"19000"/utf8>>, <<"19999"/utf8>>],
                    [<<"200"/utf8>>, <<"619"/utf8>>],
                    [<<"6200"/utf8>>, <<"6749"/utf8>>],
                    [<<"6750"/utf8>>, <<"6999"/utf8>>],
                    [<<"70000"/utf8>>, <<"74999"/utf8>>],
                    [<<"7500"/utf8>>, <<"7999"/utf8>>],
                    [<<"8000"/utf8>>, <<"9499"/utf8>>],
                    [<<"95000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-603"/utf8>>,
                <<"Saudi Arabia"/utf8>>,
                [[<<"00"/utf8>>, <<"04"/utf8>>],
                    [<<"05"/utf8>>, <<"49"/utf8>>],
                    [<<"500"/utf8>>, <<"799"/utf8>>],
                    [<<"8000"/utf8>>, <<"8999"/utf8>>],
                    [<<"90000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-604"/utf8>>,
                <<"Vietnam"/utf8>>,
                [[<<"0"/utf8>>, <<"4"/utf8>>],
                    [<<"50"/utf8>>, <<"89"/utf8>>],
                    [<<"900"/utf8>>, <<"979"/utf8>>],
                    [<<"9800"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-605"/utf8>>,
                <<"Turkey"/utf8>>,
                [[<<"01"/utf8>>, <<"02"/utf8>>],
                    [<<"030"/utf8>>, <<"039"/utf8>>],
                    [<<"04"/utf8>>, <<"09"/utf8>>],
                    [<<"100"/utf8>>, <<"399"/utf8>>],
                    [<<"4000"/utf8>>, <<"5999"/utf8>>],
                    [<<"60000"/utf8>>, <<"89999"/utf8>>],
                    [<<"9000"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-606"/utf8>>,
                <<"Romania"/utf8>>,
                [[<<"0"/utf8>>, <<"0"/utf8>>],
                    [<<"10"/utf8>>, <<"49"/utf8>>],
                    [<<"500"/utf8>>, <<"799"/utf8>>],
                    [<<"8000"/utf8>>, <<"9099"/utf8>>],
                    [<<"910"/utf8>>, <<"919"/utf8>>],
                    [<<"92000"/utf8>>, <<"97499"/utf8>>],
                    [<<"975"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-607"/utf8>>,
                <<"Mexico"/utf8>>,
                [[<<"00"/utf8>>, <<"39"/utf8>>],
                    [<<"400"/utf8>>, <<"749"/utf8>>],
                    [<<"7500"/utf8>>, <<"9499"/utf8>>],
                    [<<"95000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-608"/utf8>>,
                <<"Macedonia"/utf8>>,
                [[<<"0"/utf8>>, <<"0"/utf8>>],
                    [<<"10"/utf8>>, <<"19"/utf8>>],
                    [<<"200"/utf8>>, <<"449"/utf8>>],
                    [<<"4500"/utf8>>, <<"6499"/utf8>>],
                    [<<"65000"/utf8>>, <<"69999"/utf8>>],
                    [<<"7"/utf8>>, <<"9"/utf8>>]]},
            {regions,
                <<"978-609"/utf8>>,
                <<"Lithuania"/utf8>>,
                [[<<"00"/utf8>>, <<"39"/utf8>>],
                    [<<"400"/utf8>>, <<"799"/utf8>>],
                    [<<"8000"/utf8>>, <<"9499"/utf8>>],
                    [<<"95000"/utf8>>, <<"99999"/utf8>>]]},
            {regions, <<"978-611"/utf8>>, <<"Thailand"/utf8>>, []},
            {regions,
                <<"978-612"/utf8>>,
                <<"Peru"/utf8>>,
                [[<<"00"/utf8>>, <<"29"/utf8>>],
                    [<<"300"/utf8>>, <<"399"/utf8>>],
                    [<<"4000"/utf8>>, <<"4499"/utf8>>],
                    [<<"45000"/utf8>>, <<"49999"/utf8>>],
                    [<<"50"/utf8>>, <<"99"/utf8>>]]},
            {regions,
                <<"978-613"/utf8>>,
                <<"Mauritius"/utf8>>,
                [[<<"0"/utf8>>, <<"9"/utf8>>]]},
            {regions,
                <<"978-614"/utf8>>,
                <<"Lebanon"/utf8>>,
                [[<<"00"/utf8>>, <<"39"/utf8>>],
                    [<<"400"/utf8>>, <<"799"/utf8>>],
                    [<<"8000"/utf8>>, <<"9499"/utf8>>],
                    [<<"95000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-615"/utf8>>,
                <<"Hungary"/utf8>>,
                [[<<"00"/utf8>>, <<"09"/utf8>>],
                    [<<"100"/utf8>>, <<"499"/utf8>>],
                    [<<"5000"/utf8>>, <<"7999"/utf8>>],
                    [<<"80000"/utf8>>, <<"89999"/utf8>>]]},
            {regions,
                <<"978-616"/utf8>>,
                <<"Thailand"/utf8>>,
                [[<<"00"/utf8>>, <<"19"/utf8>>],
                    [<<"200"/utf8>>, <<"699"/utf8>>],
                    [<<"7000"/utf8>>, <<"8999"/utf8>>],
                    [<<"90000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-617"/utf8>>,
                <<"Ukraine"/utf8>>,
                [[<<"00"/utf8>>, <<"49"/utf8>>],
                    [<<"500"/utf8>>, <<"699"/utf8>>],
                    [<<"7000"/utf8>>, <<"8999"/utf8>>],
                    [<<"90000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-618"/utf8>>,
                <<"Greece"/utf8>>,
                [[<<"00"/utf8>>, <<"19"/utf8>>],
                    [<<"200"/utf8>>, <<"499"/utf8>>],
                    [<<"5000"/utf8>>, <<"7999"/utf8>>],
                    [<<"80000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-619"/utf8>>,
                <<"Bulgaria"/utf8>>,
                [[<<"00"/utf8>>, <<"14"/utf8>>],
                    [<<"150"/utf8>>, <<"699"/utf8>>],
                    [<<"7000"/utf8>>, <<"8999"/utf8>>],
                    [<<"90000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-620"/utf8>>,
                <<"Mauritius"/utf8>>,
                [[<<"0"/utf8>>, <<"9"/utf8>>]]},
            {regions,
                <<"978-621"/utf8>>,
                <<"Philippines"/utf8>>,
                [[<<"00"/utf8>>, <<"29"/utf8>>],
                    [<<"400"/utf8>>, <<"599"/utf8>>],
                    [<<"8000"/utf8>>, <<"8999"/utf8>>],
                    [<<"95000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-7"/utf8>>,
                <<"China"/utf8>>,
                [[<<"00"/utf8>>, <<"09"/utf8>>],
                    [<<"100"/utf8>>, <<"499"/utf8>>],
                    [<<"5000"/utf8>>, <<"7999"/utf8>>],
                    [<<"80000"/utf8>>, <<"89999"/utf8>>],
                    [<<"900000"/utf8>>, <<"999999"/utf8>>]]},
            {regions,
                <<"978-80"/utf8>>,
                <<"former Czechoslovakia"/utf8>>,
                [[<<"00"/utf8>>, <<"19"/utf8>>],
                    [<<"200"/utf8>>, <<"699"/utf8>>],
                    [<<"7000"/utf8>>, <<"8499"/utf8>>],
                    [<<"85000"/utf8>>, <<"89999"/utf8>>],
                    [<<"900000"/utf8>>, <<"999999"/utf8>>]]},
            {regions,
                <<"978-81"/utf8>>,
                <<"India"/utf8>>,
                [[<<"00"/utf8>>, <<"19"/utf8>>],
                    [<<"200"/utf8>>, <<"699"/utf8>>],
                    [<<"7000"/utf8>>, <<"8499"/utf8>>],
                    [<<"85000"/utf8>>, <<"89999"/utf8>>],
                    [<<"900000"/utf8>>, <<"999999"/utf8>>]]},
            {regions,
                <<"978-82"/utf8>>,
                <<"Norway"/utf8>>,
                [[<<"00"/utf8>>, <<"19"/utf8>>],
                    [<<"200"/utf8>>, <<"689"/utf8>>],
                    [<<"690000"/utf8>>, <<"699999"/utf8>>],
                    [<<"7000"/utf8>>, <<"8999"/utf8>>],
                    [<<"90000"/utf8>>, <<"98999"/utf8>>],
                    [<<"990000"/utf8>>, <<"999999"/utf8>>]]},
            {regions,
                <<"978-83"/utf8>>,
                <<"Poland"/utf8>>,
                [[<<"00"/utf8>>, <<"19"/utf8>>],
                    [<<"200"/utf8>>, <<"599"/utf8>>],
                    [<<"60000"/utf8>>, <<"69999"/utf8>>],
                    [<<"7000"/utf8>>, <<"8499"/utf8>>],
                    [<<"85000"/utf8>>, <<"89999"/utf8>>],
                    [<<"900000"/utf8>>, <<"999999"/utf8>>]]},
            {regions,
                <<"978-84"/utf8>>,
                <<"Spain"/utf8>>,
                [[<<"00"/utf8>>, <<"13"/utf8>>],
                    [<<"140"/utf8>>, <<"149"/utf8>>],
                    [<<"15000"/utf8>>, <<"19999"/utf8>>],
                    [<<"200"/utf8>>, <<"699"/utf8>>],
                    [<<"7000"/utf8>>, <<"8499"/utf8>>],
                    [<<"85000"/utf8>>, <<"89999"/utf8>>],
                    [<<"9000"/utf8>>, <<"9199"/utf8>>],
                    [<<"920000"/utf8>>, <<"923999"/utf8>>],
                    [<<"92400"/utf8>>, <<"92999"/utf8>>],
                    [<<"930000"/utf8>>, <<"949999"/utf8>>],
                    [<<"95000"/utf8>>, <<"96999"/utf8>>],
                    [<<"9700"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-85"/utf8>>,
                <<"Brazil"/utf8>>,
                [[<<"00"/utf8>>, <<"19"/utf8>>],
                    [<<"200"/utf8>>, <<"549"/utf8>>],
                    [<<"5500"/utf8>>, <<"5999"/utf8>>],
                    [<<"60000"/utf8>>, <<"69999"/utf8>>],
                    [<<"7000"/utf8>>, <<"8499"/utf8>>],
                    [<<"85000"/utf8>>, <<"89999"/utf8>>],
                    [<<"900000"/utf8>>, <<"924999"/utf8>>],
                    [<<"92500"/utf8>>, <<"94499"/utf8>>],
                    [<<"9450"/utf8>>, <<"9599"/utf8>>],
                    [<<"96"/utf8>>, <<"97"/utf8>>],
                    [<<"98000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-86"/utf8>>,
                <<"former Yugoslavia"/utf8>>,
                [[<<"00"/utf8>>, <<"29"/utf8>>],
                    [<<"300"/utf8>>, <<"599"/utf8>>],
                    [<<"6000"/utf8>>, <<"7999"/utf8>>],
                    [<<"80000"/utf8>>, <<"89999"/utf8>>],
                    [<<"900000"/utf8>>, <<"999999"/utf8>>]]},
            {regions,
                <<"978-87"/utf8>>,
                <<"Denmark"/utf8>>,
                [[<<"00"/utf8>>, <<"29"/utf8>>],
                    [<<"400"/utf8>>, <<"649"/utf8>>],
                    [<<"7000"/utf8>>, <<"7999"/utf8>>],
                    [<<"85000"/utf8>>, <<"94999"/utf8>>],
                    [<<"970000"/utf8>>, <<"999999"/utf8>>]]},
            {regions,
                <<"978-88"/utf8>>,
                <<"Italy"/utf8>>,
                [[<<"00"/utf8>>, <<"19"/utf8>>],
                    [<<"200"/utf8>>, <<"599"/utf8>>],
                    [<<"6000"/utf8>>, <<"8499"/utf8>>],
                    [<<"85000"/utf8>>, <<"89999"/utf8>>],
                    [<<"900000"/utf8>>, <<"909999"/utf8>>],
                    [<<"910"/utf8>>, <<"929"/utf8>>],
                    [<<"9300"/utf8>>, <<"9399"/utf8>>],
                    [<<"940000"/utf8>>, <<"949999"/utf8>>],
                    [<<"95000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-89"/utf8>>,
                <<"Korea Republic"/utf8>>,
                [[<<"00"/utf8>>, <<"24"/utf8>>],
                    [<<"250"/utf8>>, <<"549"/utf8>>],
                    [<<"5500"/utf8>>, <<"8499"/utf8>>],
                    [<<"85000"/utf8>>, <<"94999"/utf8>>],
                    [<<"950000"/utf8>>, <<"969999"/utf8>>],
                    [<<"97000"/utf8>>, <<"98999"/utf8>>],
                    [<<"990"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-90"/utf8>>,
                <<"Netherlands"/utf8>>,
                [[<<"00"/utf8>>, <<"19"/utf8>>],
                    [<<"200"/utf8>>, <<"499"/utf8>>],
                    [<<"5000"/utf8>>, <<"6999"/utf8>>],
                    [<<"70000"/utf8>>, <<"79999"/utf8>>],
                    [<<"800000"/utf8>>, <<"849999"/utf8>>],
                    [<<"8500"/utf8>>, <<"8999"/utf8>>],
                    [<<"90"/utf8>>, <<"90"/utf8>>],
                    [<<"94"/utf8>>, <<"94"/utf8>>]]},
            {regions,
                <<"978-91"/utf8>>,
                <<"Sweden"/utf8>>,
                [[<<"0"/utf8>>, <<"1"/utf8>>],
                    [<<"20"/utf8>>, <<"49"/utf8>>],
                    [<<"500"/utf8>>, <<"649"/utf8>>],
                    [<<"7000"/utf8>>, <<"7999"/utf8>>],
                    [<<"85000"/utf8>>, <<"94999"/utf8>>],
                    [<<"970000"/utf8>>, <<"999999"/utf8>>]]},
            {regions,
                <<"978-92"/utf8>>,
                <<"International NGO Publishers and EU Organizations"/utf8>>,
                [[<<"0"/utf8>>, <<"5"/utf8>>],
                    [<<"60"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"899"/utf8>>],
                    [<<"9000"/utf8>>, <<"9499"/utf8>>],
                    [<<"95000"/utf8>>, <<"98999"/utf8>>],
                    [<<"990000"/utf8>>, <<"999999"/utf8>>]]},
            {regions,
                <<"978-93"/utf8>>,
                <<"India"/utf8>>,
                [[<<"00"/utf8>>, <<"09"/utf8>>],
                    [<<"100"/utf8>>, <<"499"/utf8>>],
                    [<<"5000"/utf8>>, <<"7999"/utf8>>],
                    [<<"80000"/utf8>>, <<"94999"/utf8>>],
                    [<<"950000"/utf8>>, <<"999999"/utf8>>]]},
            {regions,
                <<"978-94"/utf8>>,
                <<"Netherlands"/utf8>>,
                [[<<"000"/utf8>>, <<"599"/utf8>>],
                    [<<"6000"/utf8>>, <<"8999"/utf8>>],
                    [<<"90000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-950"/utf8>>,
                <<"Argentina"/utf8>>,
                [[<<"00"/utf8>>, <<"49"/utf8>>],
                    [<<"500"/utf8>>, <<"899"/utf8>>],
                    [<<"9000"/utf8>>, <<"9899"/utf8>>],
                    [<<"99000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-951"/utf8>>,
                <<"Finland"/utf8>>,
                [[<<"0"/utf8>>, <<"1"/utf8>>],
                    [<<"20"/utf8>>, <<"54"/utf8>>],
                    [<<"550"/utf8>>, <<"889"/utf8>>],
                    [<<"8900"/utf8>>, <<"9499"/utf8>>],
                    [<<"95000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-952"/utf8>>,
                <<"Finland"/utf8>>,
                [[<<"00"/utf8>>, <<"19"/utf8>>],
                    [<<"200"/utf8>>, <<"499"/utf8>>],
                    [<<"5000"/utf8>>, <<"5999"/utf8>>],
                    [<<"60"/utf8>>, <<"65"/utf8>>],
                    [<<"6600"/utf8>>, <<"6699"/utf8>>],
                    [<<"67000"/utf8>>, <<"69999"/utf8>>],
                    [<<"7000"/utf8>>, <<"7999"/utf8>>],
                    [<<"80"/utf8>>, <<"94"/utf8>>],
                    [<<"9500"/utf8>>, <<"9899"/utf8>>],
                    [<<"99000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-953"/utf8>>,
                <<"Croatia"/utf8>>,
                [[<<"0"/utf8>>, <<"0"/utf8>>],
                    [<<"10"/utf8>>, <<"14"/utf8>>],
                    [<<"150"/utf8>>, <<"509"/utf8>>],
                    [<<"51"/utf8>>, <<"54"/utf8>>],
                    [<<"55000"/utf8>>, <<"59999"/utf8>>],
                    [<<"6000"/utf8>>, <<"9499"/utf8>>],
                    [<<"95000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-954"/utf8>>,
                <<"Bulgaria"/utf8>>,
                [[<<"00"/utf8>>, <<"28"/utf8>>],
                    [<<"2900"/utf8>>, <<"2999"/utf8>>],
                    [<<"300"/utf8>>, <<"799"/utf8>>],
                    [<<"8000"/utf8>>, <<"8999"/utf8>>],
                    [<<"90000"/utf8>>, <<"92999"/utf8>>],
                    [<<"9300"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-955"/utf8>>,
                <<"SriLanka"/utf8>>,
                [[<<"0000"/utf8>>, <<"1999"/utf8>>],
                    [<<"20"/utf8>>, <<"38"/utf8>>],
                    [<<"3900"/utf8>>, <<"4099"/utf8>>],
                    [<<"41000"/utf8>>, <<"43999"/utf8>>],
                    [<<"44000"/utf8>>, <<"44999"/utf8>>],
                    [<<"4500"/utf8>>, <<"4999"/utf8>>],
                    [<<"50000"/utf8>>, <<"54999"/utf8>>],
                    [<<"550"/utf8>>, <<"749"/utf8>>],
                    [<<"7500"/utf8>>, <<"7999"/utf8>>],
                    [<<"8000"/utf8>>, <<"9499"/utf8>>],
                    [<<"95000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-956"/utf8>>,
                <<"Chile"/utf8>>,
                [[<<"00"/utf8>>, <<"19"/utf8>>],
                    [<<"200"/utf8>>, <<"699"/utf8>>],
                    [<<"7000"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-957"/utf8>>,
                <<"Taiwan"/utf8>>,
                [[<<"00"/utf8>>, <<"02"/utf8>>],
                    [<<"0300"/utf8>>, <<"0499"/utf8>>],
                    [<<"05"/utf8>>, <<"19"/utf8>>],
                    [<<"2000"/utf8>>, <<"2099"/utf8>>],
                    [<<"21"/utf8>>, <<"27"/utf8>>],
                    [<<"28000"/utf8>>, <<"30999"/utf8>>],
                    [<<"31"/utf8>>, <<"43"/utf8>>],
                    [<<"440"/utf8>>, <<"819"/utf8>>],
                    [<<"8200"/utf8>>, <<"9699"/utf8>>],
                    [<<"97000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-958"/utf8>>,
                <<"Colombia"/utf8>>,
                [[<<"00"/utf8>>, <<"56"/utf8>>],
                    [<<"57000"/utf8>>, <<"59999"/utf8>>],
                    [<<"600"/utf8>>, <<"799"/utf8>>],
                    [<<"8000"/utf8>>, <<"9499"/utf8>>],
                    [<<"95000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-959"/utf8>>,
                <<"Cuba"/utf8>>,
                [[<<"00"/utf8>>, <<"19"/utf8>>],
                    [<<"200"/utf8>>, <<"699"/utf8>>],
                    [<<"7000"/utf8>>, <<"8499"/utf8>>],
                    [<<"85000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-960"/utf8>>,
                <<"Greece"/utf8>>,
                [[<<"00"/utf8>>, <<"19"/utf8>>],
                    [<<"200"/utf8>>, <<"659"/utf8>>],
                    [<<"6600"/utf8>>, <<"6899"/utf8>>],
                    [<<"690"/utf8>>, <<"699"/utf8>>],
                    [<<"7000"/utf8>>, <<"8499"/utf8>>],
                    [<<"85000"/utf8>>, <<"92999"/utf8>>],
                    [<<"93"/utf8>>, <<"93"/utf8>>],
                    [<<"9400"/utf8>>, <<"9799"/utf8>>],
                    [<<"98000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-961"/utf8>>,
                <<"Slovenia"/utf8>>,
                [[<<"00"/utf8>>, <<"19"/utf8>>],
                    [<<"200"/utf8>>, <<"599"/utf8>>],
                    [<<"6000"/utf8>>, <<"8999"/utf8>>],
                    [<<"90000"/utf8>>, <<"94999"/utf8>>]]},
            {regions,
                <<"978-962"/utf8>>,
                <<"HongKong, China"/utf8>>,
                [[<<"00"/utf8>>, <<"19"/utf8>>],
                    [<<"200"/utf8>>, <<"699"/utf8>>],
                    [<<"7000"/utf8>>, <<"8499"/utf8>>],
                    [<<"85000"/utf8>>, <<"86999"/utf8>>],
                    [<<"8700"/utf8>>, <<"8999"/utf8>>],
                    [<<"900"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-963"/utf8>>,
                <<"Hungary"/utf8>>,
                [[<<"00"/utf8>>, <<"19"/utf8>>],
                    [<<"200"/utf8>>, <<"699"/utf8>>],
                    [<<"7000"/utf8>>, <<"8499"/utf8>>],
                    [<<"85000"/utf8>>, <<"89999"/utf8>>],
                    [<<"9000"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-964"/utf8>>,
                <<"Iran"/utf8>>,
                [[<<"00"/utf8>>, <<"14"/utf8>>],
                    [<<"150"/utf8>>, <<"249"/utf8>>],
                    [<<"2500"/utf8>>, <<"2999"/utf8>>],
                    [<<"300"/utf8>>, <<"549"/utf8>>],
                    [<<"5500"/utf8>>, <<"8999"/utf8>>],
                    [<<"90000"/utf8>>, <<"96999"/utf8>>],
                    [<<"970"/utf8>>, <<"989"/utf8>>],
                    [<<"9900"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-965"/utf8>>,
                <<"Israel"/utf8>>,
                [[<<"00"/utf8>>, <<"19"/utf8>>],
                    [<<"200"/utf8>>, <<"599"/utf8>>],
                    [<<"7000"/utf8>>, <<"7999"/utf8>>],
                    [<<"90000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-966"/utf8>>,
                <<"Ukraine"/utf8>>,
                [[<<"00"/utf8>>, <<"12"/utf8>>],
                    [<<"130"/utf8>>, <<"139"/utf8>>],
                    [<<"14"/utf8>>, <<"14"/utf8>>],
                    [<<"1500"/utf8>>, <<"1699"/utf8>>],
                    [<<"170"/utf8>>, <<"199"/utf8>>],
                    [<<"2000"/utf8>>, <<"2789"/utf8>>],
                    [<<"279"/utf8>>, <<"289"/utf8>>],
                    [<<"2900"/utf8>>, <<"2999"/utf8>>],
                    [<<"300"/utf8>>, <<"699"/utf8>>],
                    [<<"7000"/utf8>>, <<"8999"/utf8>>],
                    [<<"90000"/utf8>>, <<"90999"/utf8>>],
                    [<<"910"/utf8>>, <<"949"/utf8>>],
                    [<<"95000"/utf8>>, <<"97999"/utf8>>],
                    [<<"980"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-967"/utf8>>,
                <<"Malaysia"/utf8>>,
                [[<<"00"/utf8>>, <<"00"/utf8>>],
                    [<<"0100"/utf8>>, <<"0999"/utf8>>],
                    [<<"10000"/utf8>>, <<"19999"/utf8>>],
                    [<<"2000"/utf8>>, <<"2499"/utf8>>],
                    [<<"300"/utf8>>, <<"499"/utf8>>],
                    [<<"5000"/utf8>>, <<"5999"/utf8>>],
                    [<<"60"/utf8>>, <<"89"/utf8>>],
                    [<<"900"/utf8>>, <<"989"/utf8>>],
                    [<<"9900"/utf8>>, <<"9989"/utf8>>],
                    [<<"99900"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-968"/utf8>>,
                <<"Mexico"/utf8>>,
                [[<<"01"/utf8>>, <<"39"/utf8>>],
                    [<<"400"/utf8>>, <<"499"/utf8>>],
                    [<<"5000"/utf8>>, <<"7999"/utf8>>],
                    [<<"800"/utf8>>, <<"899"/utf8>>],
                    [<<"9000"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-969"/utf8>>,
                <<"Pakistan"/utf8>>,
                [[<<"0"/utf8>>, <<"1"/utf8>>],
                    [<<"20"/utf8>>, <<"22"/utf8>>],
                    [<<"23000"/utf8>>, <<"23999"/utf8>>],
                    [<<"24"/utf8>>, <<"39"/utf8>>],
                    [<<"400"/utf8>>, <<"749"/utf8>>],
                    [<<"7500"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-970"/utf8>>,
                <<"Mexico"/utf8>>,
                [[<<"01"/utf8>>, <<"59"/utf8>>],
                    [<<"600"/utf8>>, <<"899"/utf8>>],
                    [<<"9000"/utf8>>, <<"9099"/utf8>>],
                    [<<"91000"/utf8>>, <<"96999"/utf8>>],
                    [<<"9700"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-971"/utf8>>,
                <<"Philippines"/utf8>>,
                [[<<"000"/utf8>>, <<"015"/utf8>>],
                    [<<"0160"/utf8>>, <<"0199"/utf8>>],
                    [<<"02"/utf8>>, <<"02"/utf8>>],
                    [<<"0300"/utf8>>, <<"0599"/utf8>>],
                    [<<"06"/utf8>>, <<"49"/utf8>>],
                    [<<"500"/utf8>>, <<"849"/utf8>>],
                    [<<"8500"/utf8>>, <<"9099"/utf8>>],
                    [<<"91000"/utf8>>, <<"95999"/utf8>>],
                    [<<"9600"/utf8>>, <<"9699"/utf8>>],
                    [<<"97"/utf8>>, <<"98"/utf8>>],
                    [<<"9900"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-972"/utf8>>,
                <<"Portugal"/utf8>>,
                [[<<"0"/utf8>>, <<"1"/utf8>>],
                    [<<"20"/utf8>>, <<"54"/utf8>>],
                    [<<"550"/utf8>>, <<"799"/utf8>>],
                    [<<"8000"/utf8>>, <<"9499"/utf8>>],
                    [<<"95000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-973"/utf8>>,
                <<"Romania"/utf8>>,
                [[<<"0"/utf8>>, <<"0"/utf8>>],
                    [<<"100"/utf8>>, <<"169"/utf8>>],
                    [<<"1700"/utf8>>, <<"1999"/utf8>>],
                    [<<"20"/utf8>>, <<"54"/utf8>>],
                    [<<"550"/utf8>>, <<"759"/utf8>>],
                    [<<"7600"/utf8>>, <<"8499"/utf8>>],
                    [<<"85000"/utf8>>, <<"88999"/utf8>>],
                    [<<"8900"/utf8>>, <<"9499"/utf8>>],
                    [<<"95000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-974"/utf8>>,
                <<"Thailand"/utf8>>,
                [[<<"00"/utf8>>, <<"19"/utf8>>],
                    [<<"200"/utf8>>, <<"699"/utf8>>],
                    [<<"7000"/utf8>>, <<"8499"/utf8>>],
                    [<<"85000"/utf8>>, <<"89999"/utf8>>],
                    [<<"90000"/utf8>>, <<"94999"/utf8>>],
                    [<<"9500"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-975"/utf8>>,
                <<"Turkey"/utf8>>,
                [[<<"00000"/utf8>>, <<"01999"/utf8>>],
                    [<<"02"/utf8>>, <<"24"/utf8>>],
                    [<<"250"/utf8>>, <<"599"/utf8>>],
                    [<<"6000"/utf8>>, <<"9199"/utf8>>],
                    [<<"92000"/utf8>>, <<"98999"/utf8>>],
                    [<<"990"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-976"/utf8>>,
                <<"Caribbean Community"/utf8>>,
                [[<<"0"/utf8>>, <<"3"/utf8>>],
                    [<<"40"/utf8>>, <<"59"/utf8>>],
                    [<<"600"/utf8>>, <<"799"/utf8>>],
                    [<<"8000"/utf8>>, <<"9499"/utf8>>],
                    [<<"95000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-977"/utf8>>,
                <<"Egypt"/utf8>>,
                [[<<"00"/utf8>>, <<"19"/utf8>>],
                    [<<"200"/utf8>>, <<"499"/utf8>>],
                    [<<"5000"/utf8>>, <<"6999"/utf8>>],
                    [<<"700"/utf8>>, <<"849"/utf8>>],
                    [<<"85000"/utf8>>, <<"89999"/utf8>>],
                    [<<"90"/utf8>>, <<"99"/utf8>>]]},
            {regions,
                <<"978-978"/utf8>>,
                <<"Nigeria"/utf8>>,
                [[<<"000"/utf8>>, <<"199"/utf8>>],
                    [<<"2000"/utf8>>, <<"2999"/utf8>>],
                    [<<"30000"/utf8>>, <<"79999"/utf8>>],
                    [<<"8000"/utf8>>, <<"8999"/utf8>>],
                    [<<"900"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-979"/utf8>>,
                <<"Indonesia"/utf8>>,
                [[<<"000"/utf8>>, <<"099"/utf8>>],
                    [<<"1000"/utf8>>, <<"1499"/utf8>>],
                    [<<"15000"/utf8>>, <<"19999"/utf8>>],
                    [<<"20"/utf8>>, <<"29"/utf8>>],
                    [<<"3000"/utf8>>, <<"3999"/utf8>>],
                    [<<"400"/utf8>>, <<"799"/utf8>>],
                    [<<"8000"/utf8>>, <<"9499"/utf8>>],
                    [<<"95000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-980"/utf8>>,
                <<"Venezuela"/utf8>>,
                [[<<"00"/utf8>>, <<"19"/utf8>>],
                    [<<"200"/utf8>>, <<"599"/utf8>>],
                    [<<"6000"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-981"/utf8>>,
                <<"Singapore"/utf8>>,
                [[<<"00"/utf8>>, <<"16"/utf8>>],
                    [<<"17000"/utf8>>, <<"19999"/utf8>>],
                    [<<"200"/utf8>>, <<"299"/utf8>>],
                    [<<"3000"/utf8>>, <<"3099"/utf8>>],
                    [<<"310"/utf8>>, <<"399"/utf8>>],
                    [<<"4000"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-982"/utf8>>,
                <<"South Pacific"/utf8>>,
                [[<<"00"/utf8>>, <<"09"/utf8>>],
                    [<<"100"/utf8>>, <<"699"/utf8>>],
                    [<<"70"/utf8>>, <<"89"/utf8>>],
                    [<<"9000"/utf8>>, <<"9799"/utf8>>],
                    [<<"98000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-983"/utf8>>,
                <<"Malaysia"/utf8>>,
                [[<<"00"/utf8>>, <<"01"/utf8>>],
                    [<<"020"/utf8>>, <<"199"/utf8>>],
                    [<<"2000"/utf8>>, <<"3999"/utf8>>],
                    [<<"40000"/utf8>>, <<"44999"/utf8>>],
                    [<<"45"/utf8>>, <<"49"/utf8>>],
                    [<<"50"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"899"/utf8>>],
                    [<<"9000"/utf8>>, <<"9899"/utf8>>],
                    [<<"99000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-984"/utf8>>,
                <<"Bangladesh"/utf8>>,
                [[<<"00"/utf8>>, <<"39"/utf8>>],
                    [<<"400"/utf8>>, <<"799"/utf8>>],
                    [<<"8000"/utf8>>, <<"8999"/utf8>>],
                    [<<"90000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-985"/utf8>>,
                <<"Belarus"/utf8>>,
                [[<<"00"/utf8>>, <<"39"/utf8>>],
                    [<<"400"/utf8>>, <<"599"/utf8>>],
                    [<<"6000"/utf8>>, <<"8999"/utf8>>],
                    [<<"90000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-986"/utf8>>,
                <<"Taiwan"/utf8>>,
                [[<<"00"/utf8>>, <<"11"/utf8>>],
                    [<<"120"/utf8>>, <<"559"/utf8>>],
                    [<<"5600"/utf8>>, <<"7999"/utf8>>],
                    [<<"80000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-987"/utf8>>,
                <<"Argentina"/utf8>>,
                [[<<"00"/utf8>>, <<"09"/utf8>>],
                    [<<"1000"/utf8>>, <<"1999"/utf8>>],
                    [<<"20000"/utf8>>, <<"29999"/utf8>>],
                    [<<"30"/utf8>>, <<"35"/utf8>>],
                    [<<"3600"/utf8>>, <<"3999"/utf8>>],
                    [<<"4000"/utf8>>, <<"4199"/utf8>>],
                    [<<"42"/utf8>>, <<"43"/utf8>>],
                    [<<"4400"/utf8>>, <<"4499"/utf8>>],
                    [<<"45000"/utf8>>, <<"48999"/utf8>>],
                    [<<"4900"/utf8>>, <<"4999"/utf8>>],
                    [<<"500"/utf8>>, <<"899"/utf8>>],
                    [<<"9000"/utf8>>, <<"9499"/utf8>>],
                    [<<"95000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-988"/utf8>>,
                <<"HongKong,China"/utf8>>,
                [[<<"00"/utf8>>, <<"11"/utf8>>],
                    [<<"12000"/utf8>>, <<"14999"/utf8>>],
                    [<<"15000"/utf8>>, <<"16999"/utf8>>],
                    [<<"17000"/utf8>>, <<"19999"/utf8>>],
                    [<<"200"/utf8>>, <<"769"/utf8>>],
                    [<<"77000"/utf8>>, <<"79999"/utf8>>],
                    [<<"8000"/utf8>>, <<"9699"/utf8>>],
                    [<<"97000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-989"/utf8>>,
                <<"Portugal"/utf8>>,
                [[<<"0"/utf8>>, <<"1"/utf8>>],
                    [<<"20"/utf8>>, <<"54"/utf8>>],
                    [<<"550"/utf8>>, <<"799"/utf8>>],
                    [<<"8000"/utf8>>, <<"9499"/utf8>>],
                    [<<"95000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-9924"/utf8>>,
                <<"Cambodia"/utf8>>,
                [[<<"30"/utf8>>, <<"39"/utf8>>],
                    [<<"500"/utf8>>, <<"649"/utf8>>],
                    [<<"9000"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9925"/utf8>>,
                <<"Cyprus"/utf8>>,
                [[<<"0"/utf8>>, <<"2"/utf8>>],
                    [<<"30"/utf8>>, <<"54"/utf8>>],
                    [<<"550"/utf8>>, <<"734"/utf8>>],
                    [<<"7350"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9926"/utf8>>,
                <<"Bosnia and Herzegovina"/utf8>>,
                [[<<"0"/utf8>>, <<"1"/utf8>>],
                    [<<"20"/utf8>>, <<"39"/utf8>>],
                    [<<"400"/utf8>>, <<"799"/utf8>>],
                    [<<"8000"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9927"/utf8>>,
                <<"Qatar"/utf8>>,
                [[<<"00"/utf8>>, <<"09"/utf8>>],
                    [<<"100"/utf8>>, <<"399"/utf8>>],
                    [<<"4000"/utf8>>, <<"4999"/utf8>>]]},
            {regions,
                <<"978-9928"/utf8>>,
                <<"Albania"/utf8>>,
                [[<<"00"/utf8>>, <<"09"/utf8>>],
                    [<<"100"/utf8>>, <<"399"/utf8>>],
                    [<<"4000"/utf8>>, <<"4999"/utf8>>]]},
            {regions,
                <<"978-9929"/utf8>>,
                <<"Guatemala"/utf8>>,
                [[<<"0"/utf8>>, <<"3"/utf8>>],
                    [<<"40"/utf8>>, <<"54"/utf8>>],
                    [<<"550"/utf8>>, <<"799"/utf8>>],
                    [<<"8000"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9930"/utf8>>,
                <<"Costa Rica"/utf8>>,
                [[<<"00"/utf8>>, <<"49"/utf8>>],
                    [<<"500"/utf8>>, <<"939"/utf8>>],
                    [<<"9400"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9931"/utf8>>,
                <<"Algeria"/utf8>>,
                [[<<"00"/utf8>>, <<"29"/utf8>>],
                    [<<"300"/utf8>>, <<"899"/utf8>>],
                    [<<"9000"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9932"/utf8>>,
                <<"Lao People's Democratic Republic"/utf8>>,
                [[<<"00"/utf8>>, <<"39"/utf8>>],
                    [<<"400"/utf8>>, <<"849"/utf8>>],
                    [<<"8500"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9933"/utf8>>,
                <<"Syria"/utf8>>,
                [[<<"0"/utf8>>, <<"0"/utf8>>],
                    [<<"10"/utf8>>, <<"39"/utf8>>],
                    [<<"400"/utf8>>, <<"899"/utf8>>],
                    [<<"9000"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9934"/utf8>>,
                <<"Latvia"/utf8>>,
                [[<<"0"/utf8>>, <<"0"/utf8>>],
                    [<<"10"/utf8>>, <<"49"/utf8>>],
                    [<<"500"/utf8>>, <<"799"/utf8>>],
                    [<<"8000"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9935"/utf8>>,
                <<"Iceland"/utf8>>,
                [[<<"0"/utf8>>, <<"0"/utf8>>],
                    [<<"10"/utf8>>, <<"39"/utf8>>],
                    [<<"400"/utf8>>, <<"899"/utf8>>],
                    [<<"9000"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9936"/utf8>>,
                <<"Afghanistan"/utf8>>,
                [[<<"0"/utf8>>, <<"1"/utf8>>],
                    [<<"20"/utf8>>, <<"39"/utf8>>],
                    [<<"400"/utf8>>, <<"799"/utf8>>],
                    [<<"8000"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9937"/utf8>>,
                <<"Nepal"/utf8>>,
                [[<<"0"/utf8>>, <<"2"/utf8>>],
                    [<<"30"/utf8>>, <<"49"/utf8>>],
                    [<<"500"/utf8>>, <<"799"/utf8>>],
                    [<<"8000"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9938"/utf8>>,
                <<"Tunisia"/utf8>>,
                [[<<"00"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"949"/utf8>>],
                    [<<"9500"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9939"/utf8>>,
                <<"Armenia"/utf8>>,
                [[<<"0"/utf8>>, <<"4"/utf8>>],
                    [<<"50"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"899"/utf8>>],
                    [<<"9000"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9940"/utf8>>,
                <<"Montenegro"/utf8>>,
                [[<<"0"/utf8>>, <<"1"/utf8>>],
                    [<<"20"/utf8>>, <<"49"/utf8>>],
                    [<<"500"/utf8>>, <<"899"/utf8>>],
                    [<<"9000"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9941"/utf8>>,
                <<"Georgia"/utf8>>,
                [[<<"0"/utf8>>, <<"0"/utf8>>],
                    [<<"10"/utf8>>, <<"39"/utf8>>],
                    [<<"400"/utf8>>, <<"899"/utf8>>],
                    [<<"9000"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9942"/utf8>>,
                <<"Ecuador"/utf8>>,
                [[<<"00"/utf8>>, <<"84"/utf8>>],
                    [<<"8500"/utf8>>, <<"8999"/utf8>>],
                    [<<"900"/utf8>>, <<"984"/utf8>>],
                    [<<"9850"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9943"/utf8>>,
                <<"Uzbekistan"/utf8>>,
                [[<<"00"/utf8>>, <<"29"/utf8>>],
                    [<<"300"/utf8>>, <<"399"/utf8>>],
                    [<<"4000"/utf8>>, <<"9749"/utf8>>],
                    [<<"975"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-9944"/utf8>>,
                <<"Turkey"/utf8>>,
                [[<<"0000"/utf8>>, <<"0999"/utf8>>],
                    [<<"100"/utf8>>, <<"499"/utf8>>],
                    [<<"5000"/utf8>>, <<"5999"/utf8>>],
                    [<<"60"/utf8>>, <<"69"/utf8>>],
                    [<<"700"/utf8>>, <<"799"/utf8>>],
                    [<<"80"/utf8>>, <<"89"/utf8>>],
                    [<<"900"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-9945"/utf8>>,
                <<"Dominican Republic"/utf8>>,
                [[<<"00"/utf8>>, <<"00"/utf8>>],
                    [<<"010"/utf8>>, <<"079"/utf8>>],
                    [<<"08"/utf8>>, <<"39"/utf8>>],
                    [<<"400"/utf8>>, <<"569"/utf8>>],
                    [<<"57"/utf8>>, <<"57"/utf8>>],
                    [<<"580"/utf8>>, <<"849"/utf8>>],
                    [<<"8500"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9946"/utf8>>,
                <<"Korea, P.D.R."/utf8>>,
                [[<<"0"/utf8>>, <<"1"/utf8>>],
                    [<<"20"/utf8>>, <<"39"/utf8>>],
                    [<<"400"/utf8>>, <<"899"/utf8>>],
                    [<<"9000"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9947"/utf8>>,
                <<"Algeria"/utf8>>,
                [[<<"0"/utf8>>, <<"1"/utf8>>],
                    [<<"20"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-9948"/utf8>>,
                <<"United Arab Emirates"/utf8>>,
                [[<<"00"/utf8>>, <<"39"/utf8>>],
                    [<<"400"/utf8>>, <<"849"/utf8>>],
                    [<<"8500"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9949"/utf8>>,
                <<"Estonia"/utf8>>,
                [[<<"0"/utf8>>, <<"0"/utf8>>],
                    [<<"10"/utf8>>, <<"39"/utf8>>],
                    [<<"400"/utf8>>, <<"749"/utf8>>],
                    [<<"75"/utf8>>, <<"89"/utf8>>],
                    [<<"9000"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9950"/utf8>>,
                <<"Palestine"/utf8>>,
                [[<<"00"/utf8>>, <<"29"/utf8>>],
                    [<<"300"/utf8>>, <<"849"/utf8>>],
                    [<<"8500"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9951"/utf8>>,
                <<"Kosova"/utf8>>,
                [[<<"00"/utf8>>, <<"39"/utf8>>],
                    [<<"400"/utf8>>, <<"849"/utf8>>],
                    [<<"8500"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9952"/utf8>>,
                <<"Azerbaijan"/utf8>>,
                [[<<"0"/utf8>>, <<"1"/utf8>>],
                    [<<"20"/utf8>>, <<"39"/utf8>>],
                    [<<"400"/utf8>>, <<"799"/utf8>>],
                    [<<"8000"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9953"/utf8>>,
                <<"Lebanon"/utf8>>,
                [[<<"0"/utf8>>, <<"0"/utf8>>],
                    [<<"10"/utf8>>, <<"39"/utf8>>],
                    [<<"400"/utf8>>, <<"599"/utf8>>],
                    [<<"60"/utf8>>, <<"89"/utf8>>],
                    [<<"9000"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9954"/utf8>>,
                <<"Morocco"/utf8>>,
                [[<<"0"/utf8>>, <<"1"/utf8>>],
                    [<<"20"/utf8>>, <<"39"/utf8>>],
                    [<<"400"/utf8>>, <<"799"/utf8>>],
                    [<<"8000"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9955"/utf8>>,
                <<"Lithuania"/utf8>>,
                [[<<"00"/utf8>>, <<"39"/utf8>>],
                    [<<"400"/utf8>>, <<"929"/utf8>>],
                    [<<"9300"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9956"/utf8>>,
                <<"Cameroon"/utf8>>,
                [[<<"0"/utf8>>, <<"0"/utf8>>],
                    [<<"10"/utf8>>, <<"39"/utf8>>],
                    [<<"400"/utf8>>, <<"899"/utf8>>],
                    [<<"9000"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9957"/utf8>>,
                <<"Jordan"/utf8>>,
                [[<<"00"/utf8>>, <<"39"/utf8>>],
                    [<<"400"/utf8>>, <<"649"/utf8>>],
                    [<<"65"/utf8>>, <<"69"/utf8>>],
                    [<<"70"/utf8>>, <<"84"/utf8>>],
                    [<<"8500"/utf8>>, <<"8799"/utf8>>],
                    [<<"88"/utf8>>, <<"99"/utf8>>]]},
            {regions,
                <<"978-9958"/utf8>>,
                <<"Bosnia and Herzegovina"/utf8>>,
                [[<<"00"/utf8>>, <<"01"/utf8>>],
                    [<<"020"/utf8>>, <<"029"/utf8>>],
                    [<<"0300"/utf8>>, <<"0399"/utf8>>],
                    [<<"040"/utf8>>, <<"089"/utf8>>],
                    [<<"0900"/utf8>>, <<"0999"/utf8>>],
                    [<<"10"/utf8>>, <<"18"/utf8>>],
                    [<<"1900"/utf8>>, <<"1999"/utf8>>],
                    [<<"20"/utf8>>, <<"49"/utf8>>],
                    [<<"500"/utf8>>, <<"899"/utf8>>],
                    [<<"9000"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9959"/utf8>>,
                <<"Libya"/utf8>>,
                [[<<"0"/utf8>>, <<"1"/utf8>>],
                    [<<"20"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"949"/utf8>>],
                    [<<"9500"/utf8>>, <<"9699"/utf8>>],
                    [<<"970"/utf8>>, <<"979"/utf8>>],
                    [<<"98"/utf8>>, <<"99"/utf8>>]]},
            {regions,
                <<"978-9960"/utf8>>,
                <<"SaudiArabia"/utf8>>,
                [[<<"00"/utf8>>, <<"59"/utf8>>],
                    [<<"600"/utf8>>, <<"899"/utf8>>],
                    [<<"9000"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9961"/utf8>>,
                <<"Algeria"/utf8>>,
                [[<<"0"/utf8>>, <<"2"/utf8>>],
                    [<<"30"/utf8>>, <<"69"/utf8>>],
                    [<<"700"/utf8>>, <<"949"/utf8>>],
                    [<<"9500"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9962"/utf8>>,
                <<"Panama"/utf8>>,
                [[<<"00"/utf8>>, <<"54"/utf8>>],
                    [<<"5500"/utf8>>, <<"5599"/utf8>>],
                    [<<"56"/utf8>>, <<"59"/utf8>>],
                    [<<"600"/utf8>>, <<"849"/utf8>>],
                    [<<"8500"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9963"/utf8>>,
                <<"Cyprus"/utf8>>,
                [[<<"0"/utf8>>, <<"1"/utf8>>],
                    [<<"2000"/utf8>>, <<"2499"/utf8>>],
                    [<<"250"/utf8>>, <<"279"/utf8>>],
                    [<<"2800"/utf8>>, <<"2999"/utf8>>],
                    [<<"30"/utf8>>, <<"54"/utf8>>],
                    [<<"550"/utf8>>, <<"734"/utf8>>],
                    [<<"7350"/utf8>>, <<"7499"/utf8>>],
                    [<<"7500"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9964"/utf8>>,
                <<"Ghana"/utf8>>,
                [[<<"0"/utf8>>, <<"6"/utf8>>],
                    [<<"70"/utf8>>, <<"94"/utf8>>],
                    [<<"950"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-9965"/utf8>>,
                <<"Kazakhstan"/utf8>>,
                [[<<"00"/utf8>>, <<"39"/utf8>>],
                    [<<"400"/utf8>>, <<"899"/utf8>>],
                    [<<"9000"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9966"/utf8>>,
                <<"Kenya"/utf8>>,
                [[<<"000"/utf8>>, <<"149"/utf8>>],
                    [<<"1500"/utf8>>, <<"1999"/utf8>>],
                    [<<"20"/utf8>>, <<"69"/utf8>>],
                    [<<"7000"/utf8>>, <<"7499"/utf8>>],
                    [<<"750"/utf8>>, <<"959"/utf8>>],
                    [<<"9600"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9967"/utf8>>,
                <<"Kyrgyz Republic"/utf8>>,
                [[<<"00"/utf8>>, <<"39"/utf8>>],
                    [<<"400"/utf8>>, <<"899"/utf8>>],
                    [<<"9000"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9968"/utf8>>,
                <<"Costa Rica"/utf8>>,
                [[<<"00"/utf8>>, <<"49"/utf8>>],
                    [<<"500"/utf8>>, <<"939"/utf8>>],
                    [<<"9400"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9970"/utf8>>,
                <<"Uganda"/utf8>>,
                [[<<"00"/utf8>>, <<"39"/utf8>>],
                    [<<"400"/utf8>>, <<"899"/utf8>>],
                    [<<"9000"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9971"/utf8>>,
                <<"Singapore"/utf8>>,
                [[<<"0"/utf8>>, <<"5"/utf8>>],
                    [<<"60"/utf8>>, <<"89"/utf8>>],
                    [<<"900"/utf8>>, <<"989"/utf8>>],
                    [<<"9900"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9972"/utf8>>,
                <<"Peru"/utf8>>,
                [[<<"00"/utf8>>, <<"09"/utf8>>],
                    [<<"1"/utf8>>, <<"1"/utf8>>],
                    [<<"200"/utf8>>, <<"249"/utf8>>],
                    [<<"2500"/utf8>>, <<"2999"/utf8>>],
                    [<<"30"/utf8>>, <<"59"/utf8>>],
                    [<<"600"/utf8>>, <<"899"/utf8>>],
                    [<<"9000"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9973"/utf8>>,
                <<"Tunisia"/utf8>>,
                [[<<"00"/utf8>>, <<"05"/utf8>>],
                    [<<"060"/utf8>>, <<"089"/utf8>>],
                    [<<"0900"/utf8>>, <<"0999"/utf8>>],
                    [<<"10"/utf8>>, <<"69"/utf8>>],
                    [<<"700"/utf8>>, <<"969"/utf8>>],
                    [<<"9700"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9974"/utf8>>,
                <<"Uruguay"/utf8>>,
                [[<<"0"/utf8>>, <<"2"/utf8>>],
                    [<<"30"/utf8>>, <<"54"/utf8>>],
                    [<<"550"/utf8>>, <<"749"/utf8>>],
                    [<<"7500"/utf8>>, <<"9099"/utf8>>],
                    [<<"91"/utf8>>, <<"94"/utf8>>],
                    [<<"95"/utf8>>, <<"99"/utf8>>]]},
            {regions,
                <<"978-9975"/utf8>>,
                <<"Moldova"/utf8>>,
                [[<<"0"/utf8>>, <<"0"/utf8>>],
                    [<<"100"/utf8>>, <<"299"/utf8>>],
                    [<<"3000"/utf8>>, <<"3999"/utf8>>],
                    [<<"4000"/utf8>>, <<"4499"/utf8>>],
                    [<<"45"/utf8>>, <<"89"/utf8>>],
                    [<<"900"/utf8>>, <<"949"/utf8>>],
                    [<<"9500"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9976"/utf8>>,
                <<"Tanzania"/utf8>>,
                [[<<"0"/utf8>>, <<"5"/utf8>>],
                    [<<"60"/utf8>>, <<"89"/utf8>>],
                    [<<"900"/utf8>>, <<"989"/utf8>>],
                    [<<"9900"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9977"/utf8>>,
                <<"Costa Rica"/utf8>>,
                [[<<"00"/utf8>>, <<"89"/utf8>>],
                    [<<"900"/utf8>>, <<"989"/utf8>>],
                    [<<"9900"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9978"/utf8>>,
                <<"Ecuador"/utf8>>,
                [[<<"00"/utf8>>, <<"29"/utf8>>],
                    [<<"300"/utf8>>, <<"399"/utf8>>],
                    [<<"40"/utf8>>, <<"94"/utf8>>],
                    [<<"950"/utf8>>, <<"989"/utf8>>],
                    [<<"9900"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9979"/utf8>>,
                <<"Iceland"/utf8>>,
                [[<<"0"/utf8>>, <<"4"/utf8>>],
                    [<<"50"/utf8>>, <<"64"/utf8>>],
                    [<<"650"/utf8>>, <<"659"/utf8>>],
                    [<<"66"/utf8>>, <<"75"/utf8>>],
                    [<<"760"/utf8>>, <<"899"/utf8>>],
                    [<<"9000"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9980"/utf8>>,
                <<"Papua New Guinea"/utf8>>,
                [[<<"0"/utf8>>, <<"3"/utf8>>],
                    [<<"40"/utf8>>, <<"89"/utf8>>],
                    [<<"900"/utf8>>, <<"989"/utf8>>],
                    [<<"9900"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9981"/utf8>>,
                <<"Morocco"/utf8>>,
                [[<<"00"/utf8>>, <<"09"/utf8>>],
                    [<<"100"/utf8>>, <<"159"/utf8>>],
                    [<<"1600"/utf8>>, <<"1999"/utf8>>],
                    [<<"20"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"949"/utf8>>],
                    [<<"9500"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9982"/utf8>>,
                <<"Zambia"/utf8>>,
                [[<<"00"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"989"/utf8>>],
                    [<<"9900"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9983"/utf8>>,
                <<"Gambia"/utf8>>,
                [[<<"80"/utf8>>, <<"94"/utf8>>],
                    [<<"950"/utf8>>, <<"989"/utf8>>],
                    [<<"9900"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9984"/utf8>>,
                <<"Latvia"/utf8>>,
                [[<<"00"/utf8>>, <<"49"/utf8>>],
                    [<<"500"/utf8>>, <<"899"/utf8>>],
                    [<<"9000"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9985"/utf8>>,
                <<"Estonia"/utf8>>,
                [[<<"0"/utf8>>, <<"4"/utf8>>],
                    [<<"50"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"899"/utf8>>],
                    [<<"9000"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9986"/utf8>>,
                <<"Lithuania"/utf8>>,
                [[<<"00"/utf8>>, <<"39"/utf8>>],
                    [<<"400"/utf8>>, <<"899"/utf8>>],
                    [<<"9000"/utf8>>, <<"9399"/utf8>>],
                    [<<"940"/utf8>>, <<"969"/utf8>>],
                    [<<"97"/utf8>>, <<"99"/utf8>>]]},
            {regions,
                <<"978-9987"/utf8>>,
                <<"Tanzania"/utf8>>,
                [[<<"00"/utf8>>, <<"39"/utf8>>],
                    [<<"400"/utf8>>, <<"879"/utf8>>],
                    [<<"8800"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9988"/utf8>>,
                <<"Ghana"/utf8>>,
                [[<<"0"/utf8>>, <<"2"/utf8>>],
                    [<<"30"/utf8>>, <<"54"/utf8>>],
                    [<<"550"/utf8>>, <<"749"/utf8>>],
                    [<<"7500"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9989"/utf8>>,
                <<"Macedonia"/utf8>>,
                [[<<"0"/utf8>>, <<"0"/utf8>>],
                    [<<"100"/utf8>>, <<"199"/utf8>>],
                    [<<"2000"/utf8>>, <<"2999"/utf8>>],
                    [<<"30"/utf8>>, <<"59"/utf8>>],
                    [<<"600"/utf8>>, <<"949"/utf8>>],
                    [<<"9500"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-99901"/utf8>>,
                <<"Bahrain"/utf8>>,
                [[<<"00"/utf8>>, <<"49"/utf8>>],
                    [<<"500"/utf8>>, <<"799"/utf8>>],
                    [<<"80"/utf8>>, <<"99"/utf8>>]]},
            {regions, <<"978-99902"/utf8>>, <<"Reserved Agency"/utf8>>, []},
            {regions,
                <<"978-99903"/utf8>>,
                <<"Mauritius"/utf8>>,
                [[<<"0"/utf8>>, <<"1"/utf8>>],
                    [<<"20"/utf8>>, <<"89"/utf8>>],
                    [<<"900"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99904"/utf8>>,
                <<"Curaçao"/utf8>>,
                [[<<"0"/utf8>>, <<"5"/utf8>>],
                    [<<"60"/utf8>>, <<"89"/utf8>>],
                    [<<"900"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99905"/utf8>>,
                <<"Bolivia"/utf8>>,
                [[<<"0"/utf8>>, <<"3"/utf8>>],
                    [<<"40"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99906"/utf8>>,
                <<"Kuwait"/utf8>>,
                [[<<"0"/utf8>>, <<"2"/utf8>>],
                    [<<"30"/utf8>>, <<"59"/utf8>>],
                    [<<"600"/utf8>>, <<"699"/utf8>>],
                    [<<"70"/utf8>>, <<"89"/utf8>>],
                    [<<"90"/utf8>>, <<"94"/utf8>>],
                    [<<"950"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99908"/utf8>>,
                <<"Malawi"/utf8>>,
                [[<<"0"/utf8>>, <<"0"/utf8>>],
                    [<<"10"/utf8>>, <<"89"/utf8>>],
                    [<<"900"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99909"/utf8>>,
                <<"Malta"/utf8>>,
                [[<<"0"/utf8>>, <<"3"/utf8>>],
                    [<<"40"/utf8>>, <<"94"/utf8>>],
                    [<<"950"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99910"/utf8>>,
                <<"SierraLeone"/utf8>>,
                [[<<"0"/utf8>>, <<"2"/utf8>>],
                    [<<"30"/utf8>>, <<"89"/utf8>>],
                    [<<"900"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99911"/utf8>>,
                <<"Lesotho"/utf8>>,
                [[<<"00"/utf8>>, <<"59"/utf8>>],
                    [<<"600"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99912"/utf8>>,
                <<"Botswana"/utf8>>,
                [[<<"0"/utf8>>, <<"3"/utf8>>],
                    [<<"400"/utf8>>, <<"599"/utf8>>],
                    [<<"60"/utf8>>, <<"89"/utf8>>],
                    [<<"900"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99913"/utf8>>,
                <<"Andorra"/utf8>>,
                [[<<"0"/utf8>>, <<"2"/utf8>>],
                    [<<"30"/utf8>>, <<"35"/utf8>>],
                    [<<"600"/utf8>>, <<"604"/utf8>>]]},
            {regions,
                <<"978-99914"/utf8>>,
                <<"Suriname"/utf8>>,
                [[<<"0"/utf8>>, <<"4"/utf8>>],
                    [<<"50"/utf8>>, <<"89"/utf8>>],
                    [<<"900"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99915"/utf8>>,
                <<"Maldives"/utf8>>,
                [[<<"0"/utf8>>, <<"4"/utf8>>],
                    [<<"50"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99916"/utf8>>,
                <<"Namibia"/utf8>>,
                [[<<"0"/utf8>>, <<"2"/utf8>>],
                    [<<"30"/utf8>>, <<"69"/utf8>>],
                    [<<"700"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99917"/utf8>>,
                <<"Brunei Darussalam"/utf8>>,
                [[<<"0"/utf8>>, <<"2"/utf8>>],
                    [<<"30"/utf8>>, <<"89"/utf8>>],
                    [<<"900"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99918"/utf8>>,
                <<"Faroe Islands"/utf8>>,
                [[<<"0"/utf8>>, <<"3"/utf8>>],
                    [<<"40"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99919"/utf8>>,
                <<"Benin"/utf8>>,
                [[<<"0"/utf8>>, <<"2"/utf8>>],
                    [<<"300"/utf8>>, <<"399"/utf8>>],
                    [<<"40"/utf8>>, <<"69"/utf8>>],
                    [<<"70"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"849"/utf8>>],
                    [<<"850"/utf8>>, <<"899"/utf8>>],
                    [<<"900"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99920"/utf8>>,
                <<"Andorra"/utf8>>,
                [[<<"0"/utf8>>, <<"4"/utf8>>],
                    [<<"50"/utf8>>, <<"89"/utf8>>],
                    [<<"900"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99921"/utf8>>,
                <<"Qatar"/utf8>>,
                [[<<"0"/utf8>>, <<"1"/utf8>>],
                    [<<"20"/utf8>>, <<"69"/utf8>>],
                    [<<"700"/utf8>>, <<"799"/utf8>>],
                    [<<"8"/utf8>>, <<"8"/utf8>>],
                    [<<"90"/utf8>>, <<"99"/utf8>>]]},
            {regions,
                <<"978-99922"/utf8>>,
                <<"Guatemala"/utf8>>,
                [[<<"0"/utf8>>, <<"3"/utf8>>],
                    [<<"40"/utf8>>, <<"69"/utf8>>],
                    [<<"700"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99923"/utf8>>,
                <<"El Salvador"/utf8>>,
                [[<<"0"/utf8>>, <<"1"/utf8>>],
                    [<<"20"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99924"/utf8>>,
                <<"Nicaragua"/utf8>>,
                [[<<"0"/utf8>>, <<"1"/utf8>>],
                    [<<"20"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99925"/utf8>>,
                <<"Paraguay"/utf8>>,
                [[<<"0"/utf8>>, <<"3"/utf8>>],
                    [<<"40"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99926"/utf8>>,
                <<"Honduras"/utf8>>,
                [[<<"0"/utf8>>, <<"0"/utf8>>],
                    [<<"10"/utf8>>, <<"59"/utf8>>],
                    [<<"600"/utf8>>, <<"869"/utf8>>],
                    [<<"87"/utf8>>, <<"89"/utf8>>],
                    [<<"90"/utf8>>, <<"99"/utf8>>]]},
            {regions,
                <<"978-99927"/utf8>>,
                <<"Albania"/utf8>>,
                [[<<"0"/utf8>>, <<"2"/utf8>>],
                    [<<"30"/utf8>>, <<"59"/utf8>>],
                    [<<"600"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99928"/utf8>>,
                <<"Georgia"/utf8>>,
                [[<<"0"/utf8>>, <<"0"/utf8>>],
                    [<<"10"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99929"/utf8>>,
                <<"Mongolia"/utf8>>,
                [[<<"0"/utf8>>, <<"4"/utf8>>],
                    [<<"50"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99930"/utf8>>,
                <<"Armenia"/utf8>>,
                [[<<"0"/utf8>>, <<"4"/utf8>>],
                    [<<"50"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99931"/utf8>>,
                <<"Seychelles"/utf8>>,
                [[<<"0"/utf8>>, <<"4"/utf8>>],
                    [<<"50"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99932"/utf8>>,
                <<"Malta"/utf8>>,
                [[<<"0"/utf8>>, <<"0"/utf8>>],
                    [<<"10"/utf8>>, <<"59"/utf8>>],
                    [<<"600"/utf8>>, <<"699"/utf8>>],
                    [<<"7"/utf8>>, <<"7"/utf8>>],
                    [<<"80"/utf8>>, <<"99"/utf8>>]]},
            {regions,
                <<"978-99933"/utf8>>,
                <<"Nepal"/utf8>>,
                [[<<"0"/utf8>>, <<"2"/utf8>>],
                    [<<"30"/utf8>>, <<"59"/utf8>>],
                    [<<"600"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99934"/utf8>>,
                <<"Dominican Republic"/utf8>>,
                [[<<"0"/utf8>>, <<"1"/utf8>>],
                    [<<"20"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99935"/utf8>>,
                <<"Haiti"/utf8>>,
                [[<<"0"/utf8>>, <<"2"/utf8>>],
                    [<<"30"/utf8>>, <<"59"/utf8>>],
                    [<<"600"/utf8>>, <<"699"/utf8>>],
                    [<<"7"/utf8>>, <<"8"/utf8>>],
                    [<<"90"/utf8>>, <<"99"/utf8>>]]},
            {regions,
                <<"978-99936"/utf8>>,
                <<"Bhutan"/utf8>>,
                [[<<"0"/utf8>>, <<"0"/utf8>>],
                    [<<"10"/utf8>>, <<"59"/utf8>>],
                    [<<"600"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99937"/utf8>>,
                <<"Macau"/utf8>>,
                [[<<"0"/utf8>>, <<"1"/utf8>>],
                    [<<"20"/utf8>>, <<"59"/utf8>>],
                    [<<"600"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99938"/utf8>>,
                <<"Srpska, Republicof"/utf8>>,
                [[<<"0"/utf8>>, <<"1"/utf8>>],
                    [<<"20"/utf8>>, <<"59"/utf8>>],
                    [<<"600"/utf8>>, <<"899"/utf8>>],
                    [<<"90"/utf8>>, <<"99"/utf8>>]]},
            {regions,
                <<"978-99939"/utf8>>,
                <<"Guatemala"/utf8>>,
                [[<<"0"/utf8>>, <<"5"/utf8>>],
                    [<<"60"/utf8>>, <<"89"/utf8>>],
                    [<<"900"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99940"/utf8>>,
                <<"Georgia"/utf8>>,
                [[<<"0"/utf8>>, <<"0"/utf8>>],
                    [<<"10"/utf8>>, <<"69"/utf8>>],
                    [<<"700"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99941"/utf8>>,
                <<"Armenia"/utf8>>,
                [[<<"0"/utf8>>, <<"2"/utf8>>],
                    [<<"30"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99942"/utf8>>,
                <<"Sudan"/utf8>>,
                [[<<"0"/utf8>>, <<"4"/utf8>>],
                    [<<"50"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99943"/utf8>>,
                <<"Albania"/utf8>>,
                [[<<"0"/utf8>>, <<"2"/utf8>>],
                    [<<"30"/utf8>>, <<"59"/utf8>>],
                    [<<"600"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99944"/utf8>>,
                <<"Ethiopia"/utf8>>,
                [[<<"0"/utf8>>, <<"4"/utf8>>],
                    [<<"50"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99945"/utf8>>,
                <<"Namibia"/utf8>>,
                [[<<"0"/utf8>>, <<"5"/utf8>>],
                    [<<"60"/utf8>>, <<"89"/utf8>>],
                    [<<"900"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99946"/utf8>>,
                <<"Nepal"/utf8>>,
                [[<<"0"/utf8>>, <<"2"/utf8>>],
                    [<<"30"/utf8>>, <<"59"/utf8>>],
                    [<<"600"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99947"/utf8>>,
                <<"Tajikistan"/utf8>>,
                [[<<"0"/utf8>>, <<"2"/utf8>>],
                    [<<"30"/utf8>>, <<"69"/utf8>>],
                    [<<"700"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99948"/utf8>>,
                <<"Eritrea"/utf8>>,
                [[<<"0"/utf8>>, <<"4"/utf8>>],
                    [<<"50"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99949"/utf8>>,
                <<"Mauritius"/utf8>>,
                [[<<"0"/utf8>>, <<"1"/utf8>>],
                    [<<"20"/utf8>>, <<"89"/utf8>>],
                    [<<"900"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99950"/utf8>>,
                <<"Cambodia"/utf8>>,
                [[<<"0"/utf8>>, <<"4"/utf8>>],
                    [<<"50"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"999"/utf8>>]]},
            {regions, <<"978-99951"/utf8>>, <<"Reserved Agency"/utf8>>, []},
            {regions,
                <<"978-99952"/utf8>>,
                <<"Mali"/utf8>>,
                [[<<"0"/utf8>>, <<"4"/utf8>>],
                    [<<"50"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99953"/utf8>>,
                <<"Paraguay"/utf8>>,
                [[<<"0"/utf8>>, <<"2"/utf8>>],
                    [<<"30"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"939"/utf8>>],
                    [<<"94"/utf8>>, <<"99"/utf8>>]]},
            {regions,
                <<"978-99954"/utf8>>,
                <<"Bolivia"/utf8>>,
                [[<<"0"/utf8>>, <<"2"/utf8>>],
                    [<<"30"/utf8>>, <<"69"/utf8>>],
                    [<<"700"/utf8>>, <<"879"/utf8>>],
                    [<<"88"/utf8>>, <<"99"/utf8>>]]},
            {regions,
                <<"978-99955"/utf8>>,
                <<"Srpska, Republicof"/utf8>>,
                [[<<"0"/utf8>>, <<"1"/utf8>>],
                    [<<"20"/utf8>>, <<"59"/utf8>>],
                    [<<"600"/utf8>>, <<"799"/utf8>>],
                    [<<"80"/utf8>>, <<"99"/utf8>>]]},
            {regions,
                <<"978-99956"/utf8>>,
                <<"Albania"/utf8>>,
                [[<<"00"/utf8>>, <<"59"/utf8>>],
                    [<<"600"/utf8>>, <<"859"/utf8>>],
                    [<<"86"/utf8>>, <<"99"/utf8>>]]},
            {regions,
                <<"978-99957"/utf8>>,
                <<"Malta"/utf8>>,
                [[<<"0"/utf8>>, <<"1"/utf8>>],
                    [<<"20"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99958"/utf8>>,
                <<"Bahrain"/utf8>>,
                [[<<"0"/utf8>>, <<"4"/utf8>>],
                    [<<"50"/utf8>>, <<"93"/utf8>>],
                    [<<"940"/utf8>>, <<"949"/utf8>>],
                    [<<"950"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99959"/utf8>>,
                <<"Luxembourg"/utf8>>,
                [[<<"0"/utf8>>, <<"2"/utf8>>],
                    [<<"30"/utf8>>, <<"59"/utf8>>],
                    [<<"600"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99960"/utf8>>,
                <<"Malawi"/utf8>>,
                [[<<"0"/utf8>>, <<"0"/utf8>>],
                    [<<"10"/utf8>>, <<"94"/utf8>>],
                    [<<"950"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99961"/utf8>>,
                <<"El Salvador"/utf8>>,
                [[<<"0"/utf8>>, <<"3"/utf8>>],
                    [<<"40"/utf8>>, <<"89"/utf8>>],
                    [<<"900"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99962"/utf8>>,
                <<"Mongolia"/utf8>>,
                [[<<"0"/utf8>>, <<"4"/utf8>>],
                    [<<"50"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99963"/utf8>>,
                <<"Cambodia"/utf8>>,
                [[<<"00"/utf8>>, <<"49"/utf8>>],
                    [<<"500"/utf8>>, <<"919"/utf8>>],
                    [<<"92"/utf8>>, <<"99"/utf8>>]]},
            {regions,
                <<"978-99964"/utf8>>,
                <<"Nicaragua"/utf8>>,
                [[<<"0"/utf8>>, <<"1"/utf8>>],
                    [<<"20"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99965"/utf8>>,
                <<"Macau"/utf8>>,
                [[<<"0"/utf8>>, <<"3"/utf8>>],
                    [<<"40"/utf8>>, <<"62"/utf8>>],
                    [<<"630"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99966"/utf8>>,
                <<"Kuwait"/utf8>>,
                [[<<"0"/utf8>>, <<"2"/utf8>>],
                    [<<"30"/utf8>>, <<"69"/utf8>>],
                    [<<"700"/utf8>>, <<"799"/utf8>>],
                    [<<"80"/utf8>>, <<"94"/utf8>>]]},
            {regions,
                <<"978-99967"/utf8>>,
                <<"Paraguay"/utf8>>,
                [[<<"0"/utf8>>, <<"1"/utf8>>],
                    [<<"20"/utf8>>, <<"59"/utf8>>],
                    [<<"600"/utf8>>, <<"899"/utf8>>]]},
            {regions,
                <<"978-99968"/utf8>>,
                <<"Botswana"/utf8>>,
                [[<<"0"/utf8>>, <<"3"/utf8>>],
                    [<<"400"/utf8>>, <<"599"/utf8>>],
                    [<<"60"/utf8>>, <<"89"/utf8>>],
                    [<<"900"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99969"/utf8>>,
                <<"Oman"/utf8>>,
                [[<<"0"/utf8>>, <<"4"/utf8>>],
                    [<<"50"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99970"/utf8>>,
                <<"Haiti"/utf8>>,
                [[<<"0"/utf8>>, <<"4"/utf8>>],
                    [<<"50"/utf8>>, <<"89"/utf8>>],
                    [<<"900"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99971"/utf8>>,
                <<"Myanmar"/utf8>>,
                [[<<"0"/utf8>>, <<"5"/utf8>>],
                    [<<"60"/utf8>>, <<"84"/utf8>>],
                    [<<"850"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99972"/utf8>>,
                <<"Faroe Islands"/utf8>>,
                [[<<"0"/utf8>>, <<"4"/utf8>>],
                    [<<"50"/utf8>>, <<"89"/utf8>>],
                    [<<"900"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99973"/utf8>>,
                <<"Mongolia"/utf8>>,
                [[<<"0"/utf8>>, <<"3"/utf8>>],
                    [<<"40"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99974"/utf8>>,
                <<"Bolivia"/utf8>>,
                [[<<"40"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99975"/utf8>>,
                <<"Tajikistan"/utf8>>,
                [[<<"0"/utf8>>, <<"3"/utf8>>],
                    [<<"40"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99976"/utf8>>,
                <<"Srpska, Republicof"/utf8>>,
                [[<<"0"/utf8>>, <<"1"/utf8>>],
                    [<<"20"/utf8>>, <<"59"/utf8>>],
                    [<<"600"/utf8>>, <<"799"/utf8>>]]},
            {regions,
                <<"978-99977"/utf8>>,
                <<"Rwanda"/utf8>>,
                [[<<"0"/utf8>>, <<"1"/utf8>>],
                    [<<"40"/utf8>>, <<"69"/utf8>>],
                    [<<"700"/utf8>>, <<"799"/utf8>>]]},
            {regions,
                <<"979-10"/utf8>>,
                <<"France"/utf8>>,
                [[<<"00"/utf8>>, <<"19"/utf8>>],
                    [<<"200"/utf8>>, <<"699"/utf8>>],
                    [<<"7000"/utf8>>, <<"8999"/utf8>>],
                    [<<"90000"/utf8>>, <<"97599"/utf8>>],
                    [<<"976000"/utf8>>, <<"999999"/utf8>>]]},
            {regions,
                <<"979-11"/utf8>>,
                <<"Korea, Republic"/utf8>>,
                [[<<"00"/utf8>>, <<"24"/utf8>>],
                    [<<"250"/utf8>>, <<"549"/utf8>>],
                    [<<"5500"/utf8>>, <<"8499"/utf8>>],
                    [<<"85000"/utf8>>, <<"94999"/utf8>>],
                    [<<"950000"/utf8>>, <<"999999"/utf8>>]]},
            {regions,
                <<"979-12"/utf8>>,
                <<"Italy"/utf8>>,
                [[<<"200"/utf8>>, <<"200"/utf8>>]]}],
        fun(X) -> erlang:element(2, X) =:= Search_candidate end
    ) of
        {ok, _} ->
            Search_candidate;

        {error, nil} ->
            search_prefix(Prefix, Body, Search_length + 1)
    end.

-spec get_prefix(binary()) -> {ok, binary()} | {error, isbn_error()}.
get_prefix(Isbn) ->
    case is_correct(Isbn) of
        true ->
            Prepared_isbn = case is_isbn10(Isbn) of
                true ->
                    _assert_subject = isbn10_to_13(Isbn),
                    {ok, Result} = case _assert_subject of
                        {ok, _} -> _assert_subject;
                        _assert_fail ->
                            erlang:error(#{gleam_error => let_assert,
                                        message => <<"Assertion pattern match failed"/utf8>>,
                                        value => _assert_fail,
                                        module => <<"glisbn"/utf8>>,
                                        function => <<"get_prefix"/utf8>>,
                                        line => 171})
                    end,
                    Result;

                false ->
                    normalize(Isbn)
            end,
            {ok,
                search_prefix(
                    gleam@string:slice(Prepared_isbn, 0, 3),
                    drop_chars(Prepared_isbn, 3),
                    0
                )};

        false ->
            {error, invalid_isbn}
    end.

-spec get_body(binary(), binary()) -> binary().
get_body(Isbn, Prefix) ->
    _pipe = Isbn,
    _pipe@1 = drop_chars(_pipe, gleam@string:length(Prefix) - 1),
    _pipe@2 = gleam@string:reverse(_pipe@1),
    _pipe@3 = drop_chars(_pipe@2, 1),
    gleam@string:reverse(_pipe@3).

-spec get_info(binary()) -> regions:dataset().
get_info(Isbn) ->
    _assert_subject = get_prefix(Isbn),
    {ok, Prefix} = case _assert_subject of
        {ok, _} -> _assert_subject;
        _assert_fail ->
            erlang:error(#{gleam_error => let_assert,
                        message => <<"Assertion pattern match failed"/utf8>>,
                        value => _assert_fail,
                        module => <<"glisbn"/utf8>>,
                        function => <<"get_info"/utf8>>,
                        line => 416})
    end,
    _assert_subject@1 = gleam@list:find(
        [{regions,
                <<"978-0"/utf8>>,
                <<"English language"/utf8>>,
                [[<<"00"/utf8>>, <<"19"/utf8>>],
                    [<<"200"/utf8>>, <<"699"/utf8>>],
                    [<<"7000"/utf8>>, <<"8499"/utf8>>],
                    [<<"85000"/utf8>>, <<"89999"/utf8>>],
                    [<<"900000"/utf8>>, <<"949999"/utf8>>],
                    [<<"9500000"/utf8>>, <<"9999999"/utf8>>]]},
            {regions,
                <<"978-1"/utf8>>,
                <<"English language"/utf8>>,
                [[<<"00"/utf8>>, <<"09"/utf8>>],
                    [<<"100"/utf8>>, <<"399"/utf8>>],
                    [<<"4000"/utf8>>, <<"5499"/utf8>>],
                    [<<"55000"/utf8>>, <<"86979"/utf8>>],
                    [<<"869800"/utf8>>, <<"998999"/utf8>>],
                    [<<"9990000"/utf8>>, <<"9999999"/utf8>>]]},
            {regions,
                <<"978-2"/utf8>>,
                <<"French language"/utf8>>,
                [[<<"00"/utf8>>, <<"19"/utf8>>],
                    [<<"200"/utf8>>, <<"349"/utf8>>],
                    [<<"35000"/utf8>>, <<"39999"/utf8>>],
                    [<<"400"/utf8>>, <<"699"/utf8>>],
                    [<<"7000"/utf8>>, <<"8399"/utf8>>],
                    [<<"84000"/utf8>>, <<"89999"/utf8>>],
                    [<<"900000"/utf8>>, <<"949999"/utf8>>],
                    [<<"9500000"/utf8>>, <<"9999999"/utf8>>]]},
            {regions,
                <<"978-3"/utf8>>,
                <<"German language"/utf8>>,
                [[<<"00"/utf8>>, <<"02"/utf8>>],
                    [<<"030"/utf8>>, <<"033"/utf8>>],
                    [<<"0340"/utf8>>, <<"0369"/utf8>>],
                    [<<"03700"/utf8>>, <<"03999"/utf8>>],
                    [<<"04"/utf8>>, <<"19"/utf8>>],
                    [<<"200"/utf8>>, <<"699"/utf8>>],
                    [<<"7000"/utf8>>, <<"8499"/utf8>>],
                    [<<"85000"/utf8>>, <<"89999"/utf8>>],
                    [<<"900000"/utf8>>, <<"949999"/utf8>>],
                    [<<"9500000"/utf8>>, <<"9539999"/utf8>>],
                    [<<"95400"/utf8>>, <<"96999"/utf8>>],
                    [<<"9700000"/utf8>>, <<"9899999"/utf8>>],
                    [<<"99000"/utf8>>, <<"99499"/utf8>>],
                    [<<"99500"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-4"/utf8>>,
                <<"Japan"/utf8>>,
                [[<<"00"/utf8>>, <<"19"/utf8>>],
                    [<<"200"/utf8>>, <<"699"/utf8>>],
                    [<<"7000"/utf8>>, <<"8499"/utf8>>],
                    [<<"85000"/utf8>>, <<"89999"/utf8>>],
                    [<<"900000"/utf8>>, <<"949999"/utf8>>],
                    [<<"9500000"/utf8>>, <<"9999999"/utf8>>]]},
            {regions,
                <<"978-5"/utf8>>,
                <<"former U.S.S.R"/utf8>>,
                [[<<"00000"/utf8>>, <<"00499"/utf8>>],
                    [<<"0050"/utf8>>, <<"0099"/utf8>>],
                    [<<"01"/utf8>>, <<"19"/utf8>>],
                    [<<"200"/utf8>>, <<"420"/utf8>>],
                    [<<"4210"/utf8>>, <<"4299"/utf8>>],
                    [<<"430"/utf8>>, <<"430"/utf8>>],
                    [<<"4310"/utf8>>, <<"4399"/utf8>>],
                    [<<"440"/utf8>>, <<"440"/utf8>>],
                    [<<"4410"/utf8>>, <<"4499"/utf8>>],
                    [<<"450"/utf8>>, <<"699"/utf8>>],
                    [<<"7000"/utf8>>, <<"8499"/utf8>>],
                    [<<"85000"/utf8>>, <<"89999"/utf8>>],
                    [<<"900000"/utf8>>, <<"909999"/utf8>>],
                    [<<"91000"/utf8>>, <<"91999"/utf8>>],
                    [<<"9200"/utf8>>, <<"9299"/utf8>>],
                    [<<"93000"/utf8>>, <<"94999"/utf8>>],
                    [<<"9500000"/utf8>>, <<"9500999"/utf8>>],
                    [<<"9501"/utf8>>, <<"9799"/utf8>>],
                    [<<"98000"/utf8>>, <<"98999"/utf8>>],
                    [<<"9900000"/utf8>>, <<"9909999"/utf8>>],
                    [<<"9910"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-600"/utf8>>,
                <<"Iran"/utf8>>,
                [[<<"00"/utf8>>, <<"09"/utf8>>],
                    [<<"100"/utf8>>, <<"499"/utf8>>],
                    [<<"5000"/utf8>>, <<"8999"/utf8>>],
                    [<<"90000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-601"/utf8>>,
                <<"Kazakhstan"/utf8>>,
                [[<<"00"/utf8>>, <<"19"/utf8>>],
                    [<<"200"/utf8>>, <<"699"/utf8>>],
                    [<<"7000"/utf8>>, <<"7999"/utf8>>],
                    [<<"80000"/utf8>>, <<"84999"/utf8>>],
                    [<<"85"/utf8>>, <<"99"/utf8>>]]},
            {regions,
                <<"978-602"/utf8>>,
                <<"Indonesia"/utf8>>,
                [[<<"00"/utf8>>, <<"07"/utf8>>],
                    [<<"0800"/utf8>>, <<"0899"/utf8>>],
                    [<<"0900"/utf8>>, <<"1099"/utf8>>],
                    [<<"1100"/utf8>>, <<"1199"/utf8>>],
                    [<<"1200"/utf8>>, <<"1399"/utf8>>],
                    [<<"14000"/utf8>>, <<"14999"/utf8>>],
                    [<<"1500"/utf8>>, <<"1699"/utf8>>],
                    [<<"17000"/utf8>>, <<"17999"/utf8>>],
                    [<<"18000"/utf8>>, <<"18999"/utf8>>],
                    [<<"19000"/utf8>>, <<"19999"/utf8>>],
                    [<<"200"/utf8>>, <<"619"/utf8>>],
                    [<<"6200"/utf8>>, <<"6749"/utf8>>],
                    [<<"6750"/utf8>>, <<"6999"/utf8>>],
                    [<<"70000"/utf8>>, <<"74999"/utf8>>],
                    [<<"7500"/utf8>>, <<"7999"/utf8>>],
                    [<<"8000"/utf8>>, <<"9499"/utf8>>],
                    [<<"95000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-603"/utf8>>,
                <<"Saudi Arabia"/utf8>>,
                [[<<"00"/utf8>>, <<"04"/utf8>>],
                    [<<"05"/utf8>>, <<"49"/utf8>>],
                    [<<"500"/utf8>>, <<"799"/utf8>>],
                    [<<"8000"/utf8>>, <<"8999"/utf8>>],
                    [<<"90000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-604"/utf8>>,
                <<"Vietnam"/utf8>>,
                [[<<"0"/utf8>>, <<"4"/utf8>>],
                    [<<"50"/utf8>>, <<"89"/utf8>>],
                    [<<"900"/utf8>>, <<"979"/utf8>>],
                    [<<"9800"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-605"/utf8>>,
                <<"Turkey"/utf8>>,
                [[<<"01"/utf8>>, <<"02"/utf8>>],
                    [<<"030"/utf8>>, <<"039"/utf8>>],
                    [<<"04"/utf8>>, <<"09"/utf8>>],
                    [<<"100"/utf8>>, <<"399"/utf8>>],
                    [<<"4000"/utf8>>, <<"5999"/utf8>>],
                    [<<"60000"/utf8>>, <<"89999"/utf8>>],
                    [<<"9000"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-606"/utf8>>,
                <<"Romania"/utf8>>,
                [[<<"0"/utf8>>, <<"0"/utf8>>],
                    [<<"10"/utf8>>, <<"49"/utf8>>],
                    [<<"500"/utf8>>, <<"799"/utf8>>],
                    [<<"8000"/utf8>>, <<"9099"/utf8>>],
                    [<<"910"/utf8>>, <<"919"/utf8>>],
                    [<<"92000"/utf8>>, <<"97499"/utf8>>],
                    [<<"975"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-607"/utf8>>,
                <<"Mexico"/utf8>>,
                [[<<"00"/utf8>>, <<"39"/utf8>>],
                    [<<"400"/utf8>>, <<"749"/utf8>>],
                    [<<"7500"/utf8>>, <<"9499"/utf8>>],
                    [<<"95000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-608"/utf8>>,
                <<"Macedonia"/utf8>>,
                [[<<"0"/utf8>>, <<"0"/utf8>>],
                    [<<"10"/utf8>>, <<"19"/utf8>>],
                    [<<"200"/utf8>>, <<"449"/utf8>>],
                    [<<"4500"/utf8>>, <<"6499"/utf8>>],
                    [<<"65000"/utf8>>, <<"69999"/utf8>>],
                    [<<"7"/utf8>>, <<"9"/utf8>>]]},
            {regions,
                <<"978-609"/utf8>>,
                <<"Lithuania"/utf8>>,
                [[<<"00"/utf8>>, <<"39"/utf8>>],
                    [<<"400"/utf8>>, <<"799"/utf8>>],
                    [<<"8000"/utf8>>, <<"9499"/utf8>>],
                    [<<"95000"/utf8>>, <<"99999"/utf8>>]]},
            {regions, <<"978-611"/utf8>>, <<"Thailand"/utf8>>, []},
            {regions,
                <<"978-612"/utf8>>,
                <<"Peru"/utf8>>,
                [[<<"00"/utf8>>, <<"29"/utf8>>],
                    [<<"300"/utf8>>, <<"399"/utf8>>],
                    [<<"4000"/utf8>>, <<"4499"/utf8>>],
                    [<<"45000"/utf8>>, <<"49999"/utf8>>],
                    [<<"50"/utf8>>, <<"99"/utf8>>]]},
            {regions,
                <<"978-613"/utf8>>,
                <<"Mauritius"/utf8>>,
                [[<<"0"/utf8>>, <<"9"/utf8>>]]},
            {regions,
                <<"978-614"/utf8>>,
                <<"Lebanon"/utf8>>,
                [[<<"00"/utf8>>, <<"39"/utf8>>],
                    [<<"400"/utf8>>, <<"799"/utf8>>],
                    [<<"8000"/utf8>>, <<"9499"/utf8>>],
                    [<<"95000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-615"/utf8>>,
                <<"Hungary"/utf8>>,
                [[<<"00"/utf8>>, <<"09"/utf8>>],
                    [<<"100"/utf8>>, <<"499"/utf8>>],
                    [<<"5000"/utf8>>, <<"7999"/utf8>>],
                    [<<"80000"/utf8>>, <<"89999"/utf8>>]]},
            {regions,
                <<"978-616"/utf8>>,
                <<"Thailand"/utf8>>,
                [[<<"00"/utf8>>, <<"19"/utf8>>],
                    [<<"200"/utf8>>, <<"699"/utf8>>],
                    [<<"7000"/utf8>>, <<"8999"/utf8>>],
                    [<<"90000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-617"/utf8>>,
                <<"Ukraine"/utf8>>,
                [[<<"00"/utf8>>, <<"49"/utf8>>],
                    [<<"500"/utf8>>, <<"699"/utf8>>],
                    [<<"7000"/utf8>>, <<"8999"/utf8>>],
                    [<<"90000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-618"/utf8>>,
                <<"Greece"/utf8>>,
                [[<<"00"/utf8>>, <<"19"/utf8>>],
                    [<<"200"/utf8>>, <<"499"/utf8>>],
                    [<<"5000"/utf8>>, <<"7999"/utf8>>],
                    [<<"80000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-619"/utf8>>,
                <<"Bulgaria"/utf8>>,
                [[<<"00"/utf8>>, <<"14"/utf8>>],
                    [<<"150"/utf8>>, <<"699"/utf8>>],
                    [<<"7000"/utf8>>, <<"8999"/utf8>>],
                    [<<"90000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-620"/utf8>>,
                <<"Mauritius"/utf8>>,
                [[<<"0"/utf8>>, <<"9"/utf8>>]]},
            {regions,
                <<"978-621"/utf8>>,
                <<"Philippines"/utf8>>,
                [[<<"00"/utf8>>, <<"29"/utf8>>],
                    [<<"400"/utf8>>, <<"599"/utf8>>],
                    [<<"8000"/utf8>>, <<"8999"/utf8>>],
                    [<<"95000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-7"/utf8>>,
                <<"China"/utf8>>,
                [[<<"00"/utf8>>, <<"09"/utf8>>],
                    [<<"100"/utf8>>, <<"499"/utf8>>],
                    [<<"5000"/utf8>>, <<"7999"/utf8>>],
                    [<<"80000"/utf8>>, <<"89999"/utf8>>],
                    [<<"900000"/utf8>>, <<"999999"/utf8>>]]},
            {regions,
                <<"978-80"/utf8>>,
                <<"former Czechoslovakia"/utf8>>,
                [[<<"00"/utf8>>, <<"19"/utf8>>],
                    [<<"200"/utf8>>, <<"699"/utf8>>],
                    [<<"7000"/utf8>>, <<"8499"/utf8>>],
                    [<<"85000"/utf8>>, <<"89999"/utf8>>],
                    [<<"900000"/utf8>>, <<"999999"/utf8>>]]},
            {regions,
                <<"978-81"/utf8>>,
                <<"India"/utf8>>,
                [[<<"00"/utf8>>, <<"19"/utf8>>],
                    [<<"200"/utf8>>, <<"699"/utf8>>],
                    [<<"7000"/utf8>>, <<"8499"/utf8>>],
                    [<<"85000"/utf8>>, <<"89999"/utf8>>],
                    [<<"900000"/utf8>>, <<"999999"/utf8>>]]},
            {regions,
                <<"978-82"/utf8>>,
                <<"Norway"/utf8>>,
                [[<<"00"/utf8>>, <<"19"/utf8>>],
                    [<<"200"/utf8>>, <<"689"/utf8>>],
                    [<<"690000"/utf8>>, <<"699999"/utf8>>],
                    [<<"7000"/utf8>>, <<"8999"/utf8>>],
                    [<<"90000"/utf8>>, <<"98999"/utf8>>],
                    [<<"990000"/utf8>>, <<"999999"/utf8>>]]},
            {regions,
                <<"978-83"/utf8>>,
                <<"Poland"/utf8>>,
                [[<<"00"/utf8>>, <<"19"/utf8>>],
                    [<<"200"/utf8>>, <<"599"/utf8>>],
                    [<<"60000"/utf8>>, <<"69999"/utf8>>],
                    [<<"7000"/utf8>>, <<"8499"/utf8>>],
                    [<<"85000"/utf8>>, <<"89999"/utf8>>],
                    [<<"900000"/utf8>>, <<"999999"/utf8>>]]},
            {regions,
                <<"978-84"/utf8>>,
                <<"Spain"/utf8>>,
                [[<<"00"/utf8>>, <<"13"/utf8>>],
                    [<<"140"/utf8>>, <<"149"/utf8>>],
                    [<<"15000"/utf8>>, <<"19999"/utf8>>],
                    [<<"200"/utf8>>, <<"699"/utf8>>],
                    [<<"7000"/utf8>>, <<"8499"/utf8>>],
                    [<<"85000"/utf8>>, <<"89999"/utf8>>],
                    [<<"9000"/utf8>>, <<"9199"/utf8>>],
                    [<<"920000"/utf8>>, <<"923999"/utf8>>],
                    [<<"92400"/utf8>>, <<"92999"/utf8>>],
                    [<<"930000"/utf8>>, <<"949999"/utf8>>],
                    [<<"95000"/utf8>>, <<"96999"/utf8>>],
                    [<<"9700"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-85"/utf8>>,
                <<"Brazil"/utf8>>,
                [[<<"00"/utf8>>, <<"19"/utf8>>],
                    [<<"200"/utf8>>, <<"549"/utf8>>],
                    [<<"5500"/utf8>>, <<"5999"/utf8>>],
                    [<<"60000"/utf8>>, <<"69999"/utf8>>],
                    [<<"7000"/utf8>>, <<"8499"/utf8>>],
                    [<<"85000"/utf8>>, <<"89999"/utf8>>],
                    [<<"900000"/utf8>>, <<"924999"/utf8>>],
                    [<<"92500"/utf8>>, <<"94499"/utf8>>],
                    [<<"9450"/utf8>>, <<"9599"/utf8>>],
                    [<<"96"/utf8>>, <<"97"/utf8>>],
                    [<<"98000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-86"/utf8>>,
                <<"former Yugoslavia"/utf8>>,
                [[<<"00"/utf8>>, <<"29"/utf8>>],
                    [<<"300"/utf8>>, <<"599"/utf8>>],
                    [<<"6000"/utf8>>, <<"7999"/utf8>>],
                    [<<"80000"/utf8>>, <<"89999"/utf8>>],
                    [<<"900000"/utf8>>, <<"999999"/utf8>>]]},
            {regions,
                <<"978-87"/utf8>>,
                <<"Denmark"/utf8>>,
                [[<<"00"/utf8>>, <<"29"/utf8>>],
                    [<<"400"/utf8>>, <<"649"/utf8>>],
                    [<<"7000"/utf8>>, <<"7999"/utf8>>],
                    [<<"85000"/utf8>>, <<"94999"/utf8>>],
                    [<<"970000"/utf8>>, <<"999999"/utf8>>]]},
            {regions,
                <<"978-88"/utf8>>,
                <<"Italy"/utf8>>,
                [[<<"00"/utf8>>, <<"19"/utf8>>],
                    [<<"200"/utf8>>, <<"599"/utf8>>],
                    [<<"6000"/utf8>>, <<"8499"/utf8>>],
                    [<<"85000"/utf8>>, <<"89999"/utf8>>],
                    [<<"900000"/utf8>>, <<"909999"/utf8>>],
                    [<<"910"/utf8>>, <<"929"/utf8>>],
                    [<<"9300"/utf8>>, <<"9399"/utf8>>],
                    [<<"940000"/utf8>>, <<"949999"/utf8>>],
                    [<<"95000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-89"/utf8>>,
                <<"Korea Republic"/utf8>>,
                [[<<"00"/utf8>>, <<"24"/utf8>>],
                    [<<"250"/utf8>>, <<"549"/utf8>>],
                    [<<"5500"/utf8>>, <<"8499"/utf8>>],
                    [<<"85000"/utf8>>, <<"94999"/utf8>>],
                    [<<"950000"/utf8>>, <<"969999"/utf8>>],
                    [<<"97000"/utf8>>, <<"98999"/utf8>>],
                    [<<"990"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-90"/utf8>>,
                <<"Netherlands"/utf8>>,
                [[<<"00"/utf8>>, <<"19"/utf8>>],
                    [<<"200"/utf8>>, <<"499"/utf8>>],
                    [<<"5000"/utf8>>, <<"6999"/utf8>>],
                    [<<"70000"/utf8>>, <<"79999"/utf8>>],
                    [<<"800000"/utf8>>, <<"849999"/utf8>>],
                    [<<"8500"/utf8>>, <<"8999"/utf8>>],
                    [<<"90"/utf8>>, <<"90"/utf8>>],
                    [<<"94"/utf8>>, <<"94"/utf8>>]]},
            {regions,
                <<"978-91"/utf8>>,
                <<"Sweden"/utf8>>,
                [[<<"0"/utf8>>, <<"1"/utf8>>],
                    [<<"20"/utf8>>, <<"49"/utf8>>],
                    [<<"500"/utf8>>, <<"649"/utf8>>],
                    [<<"7000"/utf8>>, <<"7999"/utf8>>],
                    [<<"85000"/utf8>>, <<"94999"/utf8>>],
                    [<<"970000"/utf8>>, <<"999999"/utf8>>]]},
            {regions,
                <<"978-92"/utf8>>,
                <<"International NGO Publishers and EU Organizations"/utf8>>,
                [[<<"0"/utf8>>, <<"5"/utf8>>],
                    [<<"60"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"899"/utf8>>],
                    [<<"9000"/utf8>>, <<"9499"/utf8>>],
                    [<<"95000"/utf8>>, <<"98999"/utf8>>],
                    [<<"990000"/utf8>>, <<"999999"/utf8>>]]},
            {regions,
                <<"978-93"/utf8>>,
                <<"India"/utf8>>,
                [[<<"00"/utf8>>, <<"09"/utf8>>],
                    [<<"100"/utf8>>, <<"499"/utf8>>],
                    [<<"5000"/utf8>>, <<"7999"/utf8>>],
                    [<<"80000"/utf8>>, <<"94999"/utf8>>],
                    [<<"950000"/utf8>>, <<"999999"/utf8>>]]},
            {regions,
                <<"978-94"/utf8>>,
                <<"Netherlands"/utf8>>,
                [[<<"000"/utf8>>, <<"599"/utf8>>],
                    [<<"6000"/utf8>>, <<"8999"/utf8>>],
                    [<<"90000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-950"/utf8>>,
                <<"Argentina"/utf8>>,
                [[<<"00"/utf8>>, <<"49"/utf8>>],
                    [<<"500"/utf8>>, <<"899"/utf8>>],
                    [<<"9000"/utf8>>, <<"9899"/utf8>>],
                    [<<"99000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-951"/utf8>>,
                <<"Finland"/utf8>>,
                [[<<"0"/utf8>>, <<"1"/utf8>>],
                    [<<"20"/utf8>>, <<"54"/utf8>>],
                    [<<"550"/utf8>>, <<"889"/utf8>>],
                    [<<"8900"/utf8>>, <<"9499"/utf8>>],
                    [<<"95000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-952"/utf8>>,
                <<"Finland"/utf8>>,
                [[<<"00"/utf8>>, <<"19"/utf8>>],
                    [<<"200"/utf8>>, <<"499"/utf8>>],
                    [<<"5000"/utf8>>, <<"5999"/utf8>>],
                    [<<"60"/utf8>>, <<"65"/utf8>>],
                    [<<"6600"/utf8>>, <<"6699"/utf8>>],
                    [<<"67000"/utf8>>, <<"69999"/utf8>>],
                    [<<"7000"/utf8>>, <<"7999"/utf8>>],
                    [<<"80"/utf8>>, <<"94"/utf8>>],
                    [<<"9500"/utf8>>, <<"9899"/utf8>>],
                    [<<"99000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-953"/utf8>>,
                <<"Croatia"/utf8>>,
                [[<<"0"/utf8>>, <<"0"/utf8>>],
                    [<<"10"/utf8>>, <<"14"/utf8>>],
                    [<<"150"/utf8>>, <<"509"/utf8>>],
                    [<<"51"/utf8>>, <<"54"/utf8>>],
                    [<<"55000"/utf8>>, <<"59999"/utf8>>],
                    [<<"6000"/utf8>>, <<"9499"/utf8>>],
                    [<<"95000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-954"/utf8>>,
                <<"Bulgaria"/utf8>>,
                [[<<"00"/utf8>>, <<"28"/utf8>>],
                    [<<"2900"/utf8>>, <<"2999"/utf8>>],
                    [<<"300"/utf8>>, <<"799"/utf8>>],
                    [<<"8000"/utf8>>, <<"8999"/utf8>>],
                    [<<"90000"/utf8>>, <<"92999"/utf8>>],
                    [<<"9300"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-955"/utf8>>,
                <<"SriLanka"/utf8>>,
                [[<<"0000"/utf8>>, <<"1999"/utf8>>],
                    [<<"20"/utf8>>, <<"38"/utf8>>],
                    [<<"3900"/utf8>>, <<"4099"/utf8>>],
                    [<<"41000"/utf8>>, <<"43999"/utf8>>],
                    [<<"44000"/utf8>>, <<"44999"/utf8>>],
                    [<<"4500"/utf8>>, <<"4999"/utf8>>],
                    [<<"50000"/utf8>>, <<"54999"/utf8>>],
                    [<<"550"/utf8>>, <<"749"/utf8>>],
                    [<<"7500"/utf8>>, <<"7999"/utf8>>],
                    [<<"8000"/utf8>>, <<"9499"/utf8>>],
                    [<<"95000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-956"/utf8>>,
                <<"Chile"/utf8>>,
                [[<<"00"/utf8>>, <<"19"/utf8>>],
                    [<<"200"/utf8>>, <<"699"/utf8>>],
                    [<<"7000"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-957"/utf8>>,
                <<"Taiwan"/utf8>>,
                [[<<"00"/utf8>>, <<"02"/utf8>>],
                    [<<"0300"/utf8>>, <<"0499"/utf8>>],
                    [<<"05"/utf8>>, <<"19"/utf8>>],
                    [<<"2000"/utf8>>, <<"2099"/utf8>>],
                    [<<"21"/utf8>>, <<"27"/utf8>>],
                    [<<"28000"/utf8>>, <<"30999"/utf8>>],
                    [<<"31"/utf8>>, <<"43"/utf8>>],
                    [<<"440"/utf8>>, <<"819"/utf8>>],
                    [<<"8200"/utf8>>, <<"9699"/utf8>>],
                    [<<"97000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-958"/utf8>>,
                <<"Colombia"/utf8>>,
                [[<<"00"/utf8>>, <<"56"/utf8>>],
                    [<<"57000"/utf8>>, <<"59999"/utf8>>],
                    [<<"600"/utf8>>, <<"799"/utf8>>],
                    [<<"8000"/utf8>>, <<"9499"/utf8>>],
                    [<<"95000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-959"/utf8>>,
                <<"Cuba"/utf8>>,
                [[<<"00"/utf8>>, <<"19"/utf8>>],
                    [<<"200"/utf8>>, <<"699"/utf8>>],
                    [<<"7000"/utf8>>, <<"8499"/utf8>>],
                    [<<"85000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-960"/utf8>>,
                <<"Greece"/utf8>>,
                [[<<"00"/utf8>>, <<"19"/utf8>>],
                    [<<"200"/utf8>>, <<"659"/utf8>>],
                    [<<"6600"/utf8>>, <<"6899"/utf8>>],
                    [<<"690"/utf8>>, <<"699"/utf8>>],
                    [<<"7000"/utf8>>, <<"8499"/utf8>>],
                    [<<"85000"/utf8>>, <<"92999"/utf8>>],
                    [<<"93"/utf8>>, <<"93"/utf8>>],
                    [<<"9400"/utf8>>, <<"9799"/utf8>>],
                    [<<"98000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-961"/utf8>>,
                <<"Slovenia"/utf8>>,
                [[<<"00"/utf8>>, <<"19"/utf8>>],
                    [<<"200"/utf8>>, <<"599"/utf8>>],
                    [<<"6000"/utf8>>, <<"8999"/utf8>>],
                    [<<"90000"/utf8>>, <<"94999"/utf8>>]]},
            {regions,
                <<"978-962"/utf8>>,
                <<"HongKong, China"/utf8>>,
                [[<<"00"/utf8>>, <<"19"/utf8>>],
                    [<<"200"/utf8>>, <<"699"/utf8>>],
                    [<<"7000"/utf8>>, <<"8499"/utf8>>],
                    [<<"85000"/utf8>>, <<"86999"/utf8>>],
                    [<<"8700"/utf8>>, <<"8999"/utf8>>],
                    [<<"900"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-963"/utf8>>,
                <<"Hungary"/utf8>>,
                [[<<"00"/utf8>>, <<"19"/utf8>>],
                    [<<"200"/utf8>>, <<"699"/utf8>>],
                    [<<"7000"/utf8>>, <<"8499"/utf8>>],
                    [<<"85000"/utf8>>, <<"89999"/utf8>>],
                    [<<"9000"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-964"/utf8>>,
                <<"Iran"/utf8>>,
                [[<<"00"/utf8>>, <<"14"/utf8>>],
                    [<<"150"/utf8>>, <<"249"/utf8>>],
                    [<<"2500"/utf8>>, <<"2999"/utf8>>],
                    [<<"300"/utf8>>, <<"549"/utf8>>],
                    [<<"5500"/utf8>>, <<"8999"/utf8>>],
                    [<<"90000"/utf8>>, <<"96999"/utf8>>],
                    [<<"970"/utf8>>, <<"989"/utf8>>],
                    [<<"9900"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-965"/utf8>>,
                <<"Israel"/utf8>>,
                [[<<"00"/utf8>>, <<"19"/utf8>>],
                    [<<"200"/utf8>>, <<"599"/utf8>>],
                    [<<"7000"/utf8>>, <<"7999"/utf8>>],
                    [<<"90000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-966"/utf8>>,
                <<"Ukraine"/utf8>>,
                [[<<"00"/utf8>>, <<"12"/utf8>>],
                    [<<"130"/utf8>>, <<"139"/utf8>>],
                    [<<"14"/utf8>>, <<"14"/utf8>>],
                    [<<"1500"/utf8>>, <<"1699"/utf8>>],
                    [<<"170"/utf8>>, <<"199"/utf8>>],
                    [<<"2000"/utf8>>, <<"2789"/utf8>>],
                    [<<"279"/utf8>>, <<"289"/utf8>>],
                    [<<"2900"/utf8>>, <<"2999"/utf8>>],
                    [<<"300"/utf8>>, <<"699"/utf8>>],
                    [<<"7000"/utf8>>, <<"8999"/utf8>>],
                    [<<"90000"/utf8>>, <<"90999"/utf8>>],
                    [<<"910"/utf8>>, <<"949"/utf8>>],
                    [<<"95000"/utf8>>, <<"97999"/utf8>>],
                    [<<"980"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-967"/utf8>>,
                <<"Malaysia"/utf8>>,
                [[<<"00"/utf8>>, <<"00"/utf8>>],
                    [<<"0100"/utf8>>, <<"0999"/utf8>>],
                    [<<"10000"/utf8>>, <<"19999"/utf8>>],
                    [<<"2000"/utf8>>, <<"2499"/utf8>>],
                    [<<"300"/utf8>>, <<"499"/utf8>>],
                    [<<"5000"/utf8>>, <<"5999"/utf8>>],
                    [<<"60"/utf8>>, <<"89"/utf8>>],
                    [<<"900"/utf8>>, <<"989"/utf8>>],
                    [<<"9900"/utf8>>, <<"9989"/utf8>>],
                    [<<"99900"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-968"/utf8>>,
                <<"Mexico"/utf8>>,
                [[<<"01"/utf8>>, <<"39"/utf8>>],
                    [<<"400"/utf8>>, <<"499"/utf8>>],
                    [<<"5000"/utf8>>, <<"7999"/utf8>>],
                    [<<"800"/utf8>>, <<"899"/utf8>>],
                    [<<"9000"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-969"/utf8>>,
                <<"Pakistan"/utf8>>,
                [[<<"0"/utf8>>, <<"1"/utf8>>],
                    [<<"20"/utf8>>, <<"22"/utf8>>],
                    [<<"23000"/utf8>>, <<"23999"/utf8>>],
                    [<<"24"/utf8>>, <<"39"/utf8>>],
                    [<<"400"/utf8>>, <<"749"/utf8>>],
                    [<<"7500"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-970"/utf8>>,
                <<"Mexico"/utf8>>,
                [[<<"01"/utf8>>, <<"59"/utf8>>],
                    [<<"600"/utf8>>, <<"899"/utf8>>],
                    [<<"9000"/utf8>>, <<"9099"/utf8>>],
                    [<<"91000"/utf8>>, <<"96999"/utf8>>],
                    [<<"9700"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-971"/utf8>>,
                <<"Philippines"/utf8>>,
                [[<<"000"/utf8>>, <<"015"/utf8>>],
                    [<<"0160"/utf8>>, <<"0199"/utf8>>],
                    [<<"02"/utf8>>, <<"02"/utf8>>],
                    [<<"0300"/utf8>>, <<"0599"/utf8>>],
                    [<<"06"/utf8>>, <<"49"/utf8>>],
                    [<<"500"/utf8>>, <<"849"/utf8>>],
                    [<<"8500"/utf8>>, <<"9099"/utf8>>],
                    [<<"91000"/utf8>>, <<"95999"/utf8>>],
                    [<<"9600"/utf8>>, <<"9699"/utf8>>],
                    [<<"97"/utf8>>, <<"98"/utf8>>],
                    [<<"9900"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-972"/utf8>>,
                <<"Portugal"/utf8>>,
                [[<<"0"/utf8>>, <<"1"/utf8>>],
                    [<<"20"/utf8>>, <<"54"/utf8>>],
                    [<<"550"/utf8>>, <<"799"/utf8>>],
                    [<<"8000"/utf8>>, <<"9499"/utf8>>],
                    [<<"95000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-973"/utf8>>,
                <<"Romania"/utf8>>,
                [[<<"0"/utf8>>, <<"0"/utf8>>],
                    [<<"100"/utf8>>, <<"169"/utf8>>],
                    [<<"1700"/utf8>>, <<"1999"/utf8>>],
                    [<<"20"/utf8>>, <<"54"/utf8>>],
                    [<<"550"/utf8>>, <<"759"/utf8>>],
                    [<<"7600"/utf8>>, <<"8499"/utf8>>],
                    [<<"85000"/utf8>>, <<"88999"/utf8>>],
                    [<<"8900"/utf8>>, <<"9499"/utf8>>],
                    [<<"95000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-974"/utf8>>,
                <<"Thailand"/utf8>>,
                [[<<"00"/utf8>>, <<"19"/utf8>>],
                    [<<"200"/utf8>>, <<"699"/utf8>>],
                    [<<"7000"/utf8>>, <<"8499"/utf8>>],
                    [<<"85000"/utf8>>, <<"89999"/utf8>>],
                    [<<"90000"/utf8>>, <<"94999"/utf8>>],
                    [<<"9500"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-975"/utf8>>,
                <<"Turkey"/utf8>>,
                [[<<"00000"/utf8>>, <<"01999"/utf8>>],
                    [<<"02"/utf8>>, <<"24"/utf8>>],
                    [<<"250"/utf8>>, <<"599"/utf8>>],
                    [<<"6000"/utf8>>, <<"9199"/utf8>>],
                    [<<"92000"/utf8>>, <<"98999"/utf8>>],
                    [<<"990"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-976"/utf8>>,
                <<"Caribbean Community"/utf8>>,
                [[<<"0"/utf8>>, <<"3"/utf8>>],
                    [<<"40"/utf8>>, <<"59"/utf8>>],
                    [<<"600"/utf8>>, <<"799"/utf8>>],
                    [<<"8000"/utf8>>, <<"9499"/utf8>>],
                    [<<"95000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-977"/utf8>>,
                <<"Egypt"/utf8>>,
                [[<<"00"/utf8>>, <<"19"/utf8>>],
                    [<<"200"/utf8>>, <<"499"/utf8>>],
                    [<<"5000"/utf8>>, <<"6999"/utf8>>],
                    [<<"700"/utf8>>, <<"849"/utf8>>],
                    [<<"85000"/utf8>>, <<"89999"/utf8>>],
                    [<<"90"/utf8>>, <<"99"/utf8>>]]},
            {regions,
                <<"978-978"/utf8>>,
                <<"Nigeria"/utf8>>,
                [[<<"000"/utf8>>, <<"199"/utf8>>],
                    [<<"2000"/utf8>>, <<"2999"/utf8>>],
                    [<<"30000"/utf8>>, <<"79999"/utf8>>],
                    [<<"8000"/utf8>>, <<"8999"/utf8>>],
                    [<<"900"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-979"/utf8>>,
                <<"Indonesia"/utf8>>,
                [[<<"000"/utf8>>, <<"099"/utf8>>],
                    [<<"1000"/utf8>>, <<"1499"/utf8>>],
                    [<<"15000"/utf8>>, <<"19999"/utf8>>],
                    [<<"20"/utf8>>, <<"29"/utf8>>],
                    [<<"3000"/utf8>>, <<"3999"/utf8>>],
                    [<<"400"/utf8>>, <<"799"/utf8>>],
                    [<<"8000"/utf8>>, <<"9499"/utf8>>],
                    [<<"95000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-980"/utf8>>,
                <<"Venezuela"/utf8>>,
                [[<<"00"/utf8>>, <<"19"/utf8>>],
                    [<<"200"/utf8>>, <<"599"/utf8>>],
                    [<<"6000"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-981"/utf8>>,
                <<"Singapore"/utf8>>,
                [[<<"00"/utf8>>, <<"16"/utf8>>],
                    [<<"17000"/utf8>>, <<"19999"/utf8>>],
                    [<<"200"/utf8>>, <<"299"/utf8>>],
                    [<<"3000"/utf8>>, <<"3099"/utf8>>],
                    [<<"310"/utf8>>, <<"399"/utf8>>],
                    [<<"4000"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-982"/utf8>>,
                <<"South Pacific"/utf8>>,
                [[<<"00"/utf8>>, <<"09"/utf8>>],
                    [<<"100"/utf8>>, <<"699"/utf8>>],
                    [<<"70"/utf8>>, <<"89"/utf8>>],
                    [<<"9000"/utf8>>, <<"9799"/utf8>>],
                    [<<"98000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-983"/utf8>>,
                <<"Malaysia"/utf8>>,
                [[<<"00"/utf8>>, <<"01"/utf8>>],
                    [<<"020"/utf8>>, <<"199"/utf8>>],
                    [<<"2000"/utf8>>, <<"3999"/utf8>>],
                    [<<"40000"/utf8>>, <<"44999"/utf8>>],
                    [<<"45"/utf8>>, <<"49"/utf8>>],
                    [<<"50"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"899"/utf8>>],
                    [<<"9000"/utf8>>, <<"9899"/utf8>>],
                    [<<"99000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-984"/utf8>>,
                <<"Bangladesh"/utf8>>,
                [[<<"00"/utf8>>, <<"39"/utf8>>],
                    [<<"400"/utf8>>, <<"799"/utf8>>],
                    [<<"8000"/utf8>>, <<"8999"/utf8>>],
                    [<<"90000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-985"/utf8>>,
                <<"Belarus"/utf8>>,
                [[<<"00"/utf8>>, <<"39"/utf8>>],
                    [<<"400"/utf8>>, <<"599"/utf8>>],
                    [<<"6000"/utf8>>, <<"8999"/utf8>>],
                    [<<"90000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-986"/utf8>>,
                <<"Taiwan"/utf8>>,
                [[<<"00"/utf8>>, <<"11"/utf8>>],
                    [<<"120"/utf8>>, <<"559"/utf8>>],
                    [<<"5600"/utf8>>, <<"7999"/utf8>>],
                    [<<"80000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-987"/utf8>>,
                <<"Argentina"/utf8>>,
                [[<<"00"/utf8>>, <<"09"/utf8>>],
                    [<<"1000"/utf8>>, <<"1999"/utf8>>],
                    [<<"20000"/utf8>>, <<"29999"/utf8>>],
                    [<<"30"/utf8>>, <<"35"/utf8>>],
                    [<<"3600"/utf8>>, <<"3999"/utf8>>],
                    [<<"4000"/utf8>>, <<"4199"/utf8>>],
                    [<<"42"/utf8>>, <<"43"/utf8>>],
                    [<<"4400"/utf8>>, <<"4499"/utf8>>],
                    [<<"45000"/utf8>>, <<"48999"/utf8>>],
                    [<<"4900"/utf8>>, <<"4999"/utf8>>],
                    [<<"500"/utf8>>, <<"899"/utf8>>],
                    [<<"9000"/utf8>>, <<"9499"/utf8>>],
                    [<<"95000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-988"/utf8>>,
                <<"HongKong,China"/utf8>>,
                [[<<"00"/utf8>>, <<"11"/utf8>>],
                    [<<"12000"/utf8>>, <<"14999"/utf8>>],
                    [<<"15000"/utf8>>, <<"16999"/utf8>>],
                    [<<"17000"/utf8>>, <<"19999"/utf8>>],
                    [<<"200"/utf8>>, <<"769"/utf8>>],
                    [<<"77000"/utf8>>, <<"79999"/utf8>>],
                    [<<"8000"/utf8>>, <<"9699"/utf8>>],
                    [<<"97000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-989"/utf8>>,
                <<"Portugal"/utf8>>,
                [[<<"0"/utf8>>, <<"1"/utf8>>],
                    [<<"20"/utf8>>, <<"54"/utf8>>],
                    [<<"550"/utf8>>, <<"799"/utf8>>],
                    [<<"8000"/utf8>>, <<"9499"/utf8>>],
                    [<<"95000"/utf8>>, <<"99999"/utf8>>]]},
            {regions,
                <<"978-9924"/utf8>>,
                <<"Cambodia"/utf8>>,
                [[<<"30"/utf8>>, <<"39"/utf8>>],
                    [<<"500"/utf8>>, <<"649"/utf8>>],
                    [<<"9000"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9925"/utf8>>,
                <<"Cyprus"/utf8>>,
                [[<<"0"/utf8>>, <<"2"/utf8>>],
                    [<<"30"/utf8>>, <<"54"/utf8>>],
                    [<<"550"/utf8>>, <<"734"/utf8>>],
                    [<<"7350"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9926"/utf8>>,
                <<"Bosnia and Herzegovina"/utf8>>,
                [[<<"0"/utf8>>, <<"1"/utf8>>],
                    [<<"20"/utf8>>, <<"39"/utf8>>],
                    [<<"400"/utf8>>, <<"799"/utf8>>],
                    [<<"8000"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9927"/utf8>>,
                <<"Qatar"/utf8>>,
                [[<<"00"/utf8>>, <<"09"/utf8>>],
                    [<<"100"/utf8>>, <<"399"/utf8>>],
                    [<<"4000"/utf8>>, <<"4999"/utf8>>]]},
            {regions,
                <<"978-9928"/utf8>>,
                <<"Albania"/utf8>>,
                [[<<"00"/utf8>>, <<"09"/utf8>>],
                    [<<"100"/utf8>>, <<"399"/utf8>>],
                    [<<"4000"/utf8>>, <<"4999"/utf8>>]]},
            {regions,
                <<"978-9929"/utf8>>,
                <<"Guatemala"/utf8>>,
                [[<<"0"/utf8>>, <<"3"/utf8>>],
                    [<<"40"/utf8>>, <<"54"/utf8>>],
                    [<<"550"/utf8>>, <<"799"/utf8>>],
                    [<<"8000"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9930"/utf8>>,
                <<"Costa Rica"/utf8>>,
                [[<<"00"/utf8>>, <<"49"/utf8>>],
                    [<<"500"/utf8>>, <<"939"/utf8>>],
                    [<<"9400"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9931"/utf8>>,
                <<"Algeria"/utf8>>,
                [[<<"00"/utf8>>, <<"29"/utf8>>],
                    [<<"300"/utf8>>, <<"899"/utf8>>],
                    [<<"9000"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9932"/utf8>>,
                <<"Lao People's Democratic Republic"/utf8>>,
                [[<<"00"/utf8>>, <<"39"/utf8>>],
                    [<<"400"/utf8>>, <<"849"/utf8>>],
                    [<<"8500"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9933"/utf8>>,
                <<"Syria"/utf8>>,
                [[<<"0"/utf8>>, <<"0"/utf8>>],
                    [<<"10"/utf8>>, <<"39"/utf8>>],
                    [<<"400"/utf8>>, <<"899"/utf8>>],
                    [<<"9000"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9934"/utf8>>,
                <<"Latvia"/utf8>>,
                [[<<"0"/utf8>>, <<"0"/utf8>>],
                    [<<"10"/utf8>>, <<"49"/utf8>>],
                    [<<"500"/utf8>>, <<"799"/utf8>>],
                    [<<"8000"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9935"/utf8>>,
                <<"Iceland"/utf8>>,
                [[<<"0"/utf8>>, <<"0"/utf8>>],
                    [<<"10"/utf8>>, <<"39"/utf8>>],
                    [<<"400"/utf8>>, <<"899"/utf8>>],
                    [<<"9000"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9936"/utf8>>,
                <<"Afghanistan"/utf8>>,
                [[<<"0"/utf8>>, <<"1"/utf8>>],
                    [<<"20"/utf8>>, <<"39"/utf8>>],
                    [<<"400"/utf8>>, <<"799"/utf8>>],
                    [<<"8000"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9937"/utf8>>,
                <<"Nepal"/utf8>>,
                [[<<"0"/utf8>>, <<"2"/utf8>>],
                    [<<"30"/utf8>>, <<"49"/utf8>>],
                    [<<"500"/utf8>>, <<"799"/utf8>>],
                    [<<"8000"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9938"/utf8>>,
                <<"Tunisia"/utf8>>,
                [[<<"00"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"949"/utf8>>],
                    [<<"9500"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9939"/utf8>>,
                <<"Armenia"/utf8>>,
                [[<<"0"/utf8>>, <<"4"/utf8>>],
                    [<<"50"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"899"/utf8>>],
                    [<<"9000"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9940"/utf8>>,
                <<"Montenegro"/utf8>>,
                [[<<"0"/utf8>>, <<"1"/utf8>>],
                    [<<"20"/utf8>>, <<"49"/utf8>>],
                    [<<"500"/utf8>>, <<"899"/utf8>>],
                    [<<"9000"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9941"/utf8>>,
                <<"Georgia"/utf8>>,
                [[<<"0"/utf8>>, <<"0"/utf8>>],
                    [<<"10"/utf8>>, <<"39"/utf8>>],
                    [<<"400"/utf8>>, <<"899"/utf8>>],
                    [<<"9000"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9942"/utf8>>,
                <<"Ecuador"/utf8>>,
                [[<<"00"/utf8>>, <<"84"/utf8>>],
                    [<<"8500"/utf8>>, <<"8999"/utf8>>],
                    [<<"900"/utf8>>, <<"984"/utf8>>],
                    [<<"9850"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9943"/utf8>>,
                <<"Uzbekistan"/utf8>>,
                [[<<"00"/utf8>>, <<"29"/utf8>>],
                    [<<"300"/utf8>>, <<"399"/utf8>>],
                    [<<"4000"/utf8>>, <<"9749"/utf8>>],
                    [<<"975"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-9944"/utf8>>,
                <<"Turkey"/utf8>>,
                [[<<"0000"/utf8>>, <<"0999"/utf8>>],
                    [<<"100"/utf8>>, <<"499"/utf8>>],
                    [<<"5000"/utf8>>, <<"5999"/utf8>>],
                    [<<"60"/utf8>>, <<"69"/utf8>>],
                    [<<"700"/utf8>>, <<"799"/utf8>>],
                    [<<"80"/utf8>>, <<"89"/utf8>>],
                    [<<"900"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-9945"/utf8>>,
                <<"Dominican Republic"/utf8>>,
                [[<<"00"/utf8>>, <<"00"/utf8>>],
                    [<<"010"/utf8>>, <<"079"/utf8>>],
                    [<<"08"/utf8>>, <<"39"/utf8>>],
                    [<<"400"/utf8>>, <<"569"/utf8>>],
                    [<<"57"/utf8>>, <<"57"/utf8>>],
                    [<<"580"/utf8>>, <<"849"/utf8>>],
                    [<<"8500"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9946"/utf8>>,
                <<"Korea, P.D.R."/utf8>>,
                [[<<"0"/utf8>>, <<"1"/utf8>>],
                    [<<"20"/utf8>>, <<"39"/utf8>>],
                    [<<"400"/utf8>>, <<"899"/utf8>>],
                    [<<"9000"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9947"/utf8>>,
                <<"Algeria"/utf8>>,
                [[<<"0"/utf8>>, <<"1"/utf8>>],
                    [<<"20"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-9948"/utf8>>,
                <<"United Arab Emirates"/utf8>>,
                [[<<"00"/utf8>>, <<"39"/utf8>>],
                    [<<"400"/utf8>>, <<"849"/utf8>>],
                    [<<"8500"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9949"/utf8>>,
                <<"Estonia"/utf8>>,
                [[<<"0"/utf8>>, <<"0"/utf8>>],
                    [<<"10"/utf8>>, <<"39"/utf8>>],
                    [<<"400"/utf8>>, <<"749"/utf8>>],
                    [<<"75"/utf8>>, <<"89"/utf8>>],
                    [<<"9000"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9950"/utf8>>,
                <<"Palestine"/utf8>>,
                [[<<"00"/utf8>>, <<"29"/utf8>>],
                    [<<"300"/utf8>>, <<"849"/utf8>>],
                    [<<"8500"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9951"/utf8>>,
                <<"Kosova"/utf8>>,
                [[<<"00"/utf8>>, <<"39"/utf8>>],
                    [<<"400"/utf8>>, <<"849"/utf8>>],
                    [<<"8500"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9952"/utf8>>,
                <<"Azerbaijan"/utf8>>,
                [[<<"0"/utf8>>, <<"1"/utf8>>],
                    [<<"20"/utf8>>, <<"39"/utf8>>],
                    [<<"400"/utf8>>, <<"799"/utf8>>],
                    [<<"8000"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9953"/utf8>>,
                <<"Lebanon"/utf8>>,
                [[<<"0"/utf8>>, <<"0"/utf8>>],
                    [<<"10"/utf8>>, <<"39"/utf8>>],
                    [<<"400"/utf8>>, <<"599"/utf8>>],
                    [<<"60"/utf8>>, <<"89"/utf8>>],
                    [<<"9000"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9954"/utf8>>,
                <<"Morocco"/utf8>>,
                [[<<"0"/utf8>>, <<"1"/utf8>>],
                    [<<"20"/utf8>>, <<"39"/utf8>>],
                    [<<"400"/utf8>>, <<"799"/utf8>>],
                    [<<"8000"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9955"/utf8>>,
                <<"Lithuania"/utf8>>,
                [[<<"00"/utf8>>, <<"39"/utf8>>],
                    [<<"400"/utf8>>, <<"929"/utf8>>],
                    [<<"9300"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9956"/utf8>>,
                <<"Cameroon"/utf8>>,
                [[<<"0"/utf8>>, <<"0"/utf8>>],
                    [<<"10"/utf8>>, <<"39"/utf8>>],
                    [<<"400"/utf8>>, <<"899"/utf8>>],
                    [<<"9000"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9957"/utf8>>,
                <<"Jordan"/utf8>>,
                [[<<"00"/utf8>>, <<"39"/utf8>>],
                    [<<"400"/utf8>>, <<"649"/utf8>>],
                    [<<"65"/utf8>>, <<"69"/utf8>>],
                    [<<"70"/utf8>>, <<"84"/utf8>>],
                    [<<"8500"/utf8>>, <<"8799"/utf8>>],
                    [<<"88"/utf8>>, <<"99"/utf8>>]]},
            {regions,
                <<"978-9958"/utf8>>,
                <<"Bosnia and Herzegovina"/utf8>>,
                [[<<"00"/utf8>>, <<"01"/utf8>>],
                    [<<"020"/utf8>>, <<"029"/utf8>>],
                    [<<"0300"/utf8>>, <<"0399"/utf8>>],
                    [<<"040"/utf8>>, <<"089"/utf8>>],
                    [<<"0900"/utf8>>, <<"0999"/utf8>>],
                    [<<"10"/utf8>>, <<"18"/utf8>>],
                    [<<"1900"/utf8>>, <<"1999"/utf8>>],
                    [<<"20"/utf8>>, <<"49"/utf8>>],
                    [<<"500"/utf8>>, <<"899"/utf8>>],
                    [<<"9000"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9959"/utf8>>,
                <<"Libya"/utf8>>,
                [[<<"0"/utf8>>, <<"1"/utf8>>],
                    [<<"20"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"949"/utf8>>],
                    [<<"9500"/utf8>>, <<"9699"/utf8>>],
                    [<<"970"/utf8>>, <<"979"/utf8>>],
                    [<<"98"/utf8>>, <<"99"/utf8>>]]},
            {regions,
                <<"978-9960"/utf8>>,
                <<"SaudiArabia"/utf8>>,
                [[<<"00"/utf8>>, <<"59"/utf8>>],
                    [<<"600"/utf8>>, <<"899"/utf8>>],
                    [<<"9000"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9961"/utf8>>,
                <<"Algeria"/utf8>>,
                [[<<"0"/utf8>>, <<"2"/utf8>>],
                    [<<"30"/utf8>>, <<"69"/utf8>>],
                    [<<"700"/utf8>>, <<"949"/utf8>>],
                    [<<"9500"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9962"/utf8>>,
                <<"Panama"/utf8>>,
                [[<<"00"/utf8>>, <<"54"/utf8>>],
                    [<<"5500"/utf8>>, <<"5599"/utf8>>],
                    [<<"56"/utf8>>, <<"59"/utf8>>],
                    [<<"600"/utf8>>, <<"849"/utf8>>],
                    [<<"8500"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9963"/utf8>>,
                <<"Cyprus"/utf8>>,
                [[<<"0"/utf8>>, <<"1"/utf8>>],
                    [<<"2000"/utf8>>, <<"2499"/utf8>>],
                    [<<"250"/utf8>>, <<"279"/utf8>>],
                    [<<"2800"/utf8>>, <<"2999"/utf8>>],
                    [<<"30"/utf8>>, <<"54"/utf8>>],
                    [<<"550"/utf8>>, <<"734"/utf8>>],
                    [<<"7350"/utf8>>, <<"7499"/utf8>>],
                    [<<"7500"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9964"/utf8>>,
                <<"Ghana"/utf8>>,
                [[<<"0"/utf8>>, <<"6"/utf8>>],
                    [<<"70"/utf8>>, <<"94"/utf8>>],
                    [<<"950"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-9965"/utf8>>,
                <<"Kazakhstan"/utf8>>,
                [[<<"00"/utf8>>, <<"39"/utf8>>],
                    [<<"400"/utf8>>, <<"899"/utf8>>],
                    [<<"9000"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9966"/utf8>>,
                <<"Kenya"/utf8>>,
                [[<<"000"/utf8>>, <<"149"/utf8>>],
                    [<<"1500"/utf8>>, <<"1999"/utf8>>],
                    [<<"20"/utf8>>, <<"69"/utf8>>],
                    [<<"7000"/utf8>>, <<"7499"/utf8>>],
                    [<<"750"/utf8>>, <<"959"/utf8>>],
                    [<<"9600"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9967"/utf8>>,
                <<"Kyrgyz Republic"/utf8>>,
                [[<<"00"/utf8>>, <<"39"/utf8>>],
                    [<<"400"/utf8>>, <<"899"/utf8>>],
                    [<<"9000"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9968"/utf8>>,
                <<"Costa Rica"/utf8>>,
                [[<<"00"/utf8>>, <<"49"/utf8>>],
                    [<<"500"/utf8>>, <<"939"/utf8>>],
                    [<<"9400"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9970"/utf8>>,
                <<"Uganda"/utf8>>,
                [[<<"00"/utf8>>, <<"39"/utf8>>],
                    [<<"400"/utf8>>, <<"899"/utf8>>],
                    [<<"9000"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9971"/utf8>>,
                <<"Singapore"/utf8>>,
                [[<<"0"/utf8>>, <<"5"/utf8>>],
                    [<<"60"/utf8>>, <<"89"/utf8>>],
                    [<<"900"/utf8>>, <<"989"/utf8>>],
                    [<<"9900"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9972"/utf8>>,
                <<"Peru"/utf8>>,
                [[<<"00"/utf8>>, <<"09"/utf8>>],
                    [<<"1"/utf8>>, <<"1"/utf8>>],
                    [<<"200"/utf8>>, <<"249"/utf8>>],
                    [<<"2500"/utf8>>, <<"2999"/utf8>>],
                    [<<"30"/utf8>>, <<"59"/utf8>>],
                    [<<"600"/utf8>>, <<"899"/utf8>>],
                    [<<"9000"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9973"/utf8>>,
                <<"Tunisia"/utf8>>,
                [[<<"00"/utf8>>, <<"05"/utf8>>],
                    [<<"060"/utf8>>, <<"089"/utf8>>],
                    [<<"0900"/utf8>>, <<"0999"/utf8>>],
                    [<<"10"/utf8>>, <<"69"/utf8>>],
                    [<<"700"/utf8>>, <<"969"/utf8>>],
                    [<<"9700"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9974"/utf8>>,
                <<"Uruguay"/utf8>>,
                [[<<"0"/utf8>>, <<"2"/utf8>>],
                    [<<"30"/utf8>>, <<"54"/utf8>>],
                    [<<"550"/utf8>>, <<"749"/utf8>>],
                    [<<"7500"/utf8>>, <<"9099"/utf8>>],
                    [<<"91"/utf8>>, <<"94"/utf8>>],
                    [<<"95"/utf8>>, <<"99"/utf8>>]]},
            {regions,
                <<"978-9975"/utf8>>,
                <<"Moldova"/utf8>>,
                [[<<"0"/utf8>>, <<"0"/utf8>>],
                    [<<"100"/utf8>>, <<"299"/utf8>>],
                    [<<"3000"/utf8>>, <<"3999"/utf8>>],
                    [<<"4000"/utf8>>, <<"4499"/utf8>>],
                    [<<"45"/utf8>>, <<"89"/utf8>>],
                    [<<"900"/utf8>>, <<"949"/utf8>>],
                    [<<"9500"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9976"/utf8>>,
                <<"Tanzania"/utf8>>,
                [[<<"0"/utf8>>, <<"5"/utf8>>],
                    [<<"60"/utf8>>, <<"89"/utf8>>],
                    [<<"900"/utf8>>, <<"989"/utf8>>],
                    [<<"9900"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9977"/utf8>>,
                <<"Costa Rica"/utf8>>,
                [[<<"00"/utf8>>, <<"89"/utf8>>],
                    [<<"900"/utf8>>, <<"989"/utf8>>],
                    [<<"9900"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9978"/utf8>>,
                <<"Ecuador"/utf8>>,
                [[<<"00"/utf8>>, <<"29"/utf8>>],
                    [<<"300"/utf8>>, <<"399"/utf8>>],
                    [<<"40"/utf8>>, <<"94"/utf8>>],
                    [<<"950"/utf8>>, <<"989"/utf8>>],
                    [<<"9900"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9979"/utf8>>,
                <<"Iceland"/utf8>>,
                [[<<"0"/utf8>>, <<"4"/utf8>>],
                    [<<"50"/utf8>>, <<"64"/utf8>>],
                    [<<"650"/utf8>>, <<"659"/utf8>>],
                    [<<"66"/utf8>>, <<"75"/utf8>>],
                    [<<"760"/utf8>>, <<"899"/utf8>>],
                    [<<"9000"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9980"/utf8>>,
                <<"Papua New Guinea"/utf8>>,
                [[<<"0"/utf8>>, <<"3"/utf8>>],
                    [<<"40"/utf8>>, <<"89"/utf8>>],
                    [<<"900"/utf8>>, <<"989"/utf8>>],
                    [<<"9900"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9981"/utf8>>,
                <<"Morocco"/utf8>>,
                [[<<"00"/utf8>>, <<"09"/utf8>>],
                    [<<"100"/utf8>>, <<"159"/utf8>>],
                    [<<"1600"/utf8>>, <<"1999"/utf8>>],
                    [<<"20"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"949"/utf8>>],
                    [<<"9500"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9982"/utf8>>,
                <<"Zambia"/utf8>>,
                [[<<"00"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"989"/utf8>>],
                    [<<"9900"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9983"/utf8>>,
                <<"Gambia"/utf8>>,
                [[<<"80"/utf8>>, <<"94"/utf8>>],
                    [<<"950"/utf8>>, <<"989"/utf8>>],
                    [<<"9900"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9984"/utf8>>,
                <<"Latvia"/utf8>>,
                [[<<"00"/utf8>>, <<"49"/utf8>>],
                    [<<"500"/utf8>>, <<"899"/utf8>>],
                    [<<"9000"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9985"/utf8>>,
                <<"Estonia"/utf8>>,
                [[<<"0"/utf8>>, <<"4"/utf8>>],
                    [<<"50"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"899"/utf8>>],
                    [<<"9000"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9986"/utf8>>,
                <<"Lithuania"/utf8>>,
                [[<<"00"/utf8>>, <<"39"/utf8>>],
                    [<<"400"/utf8>>, <<"899"/utf8>>],
                    [<<"9000"/utf8>>, <<"9399"/utf8>>],
                    [<<"940"/utf8>>, <<"969"/utf8>>],
                    [<<"97"/utf8>>, <<"99"/utf8>>]]},
            {regions,
                <<"978-9987"/utf8>>,
                <<"Tanzania"/utf8>>,
                [[<<"00"/utf8>>, <<"39"/utf8>>],
                    [<<"400"/utf8>>, <<"879"/utf8>>],
                    [<<"8800"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9988"/utf8>>,
                <<"Ghana"/utf8>>,
                [[<<"0"/utf8>>, <<"2"/utf8>>],
                    [<<"30"/utf8>>, <<"54"/utf8>>],
                    [<<"550"/utf8>>, <<"749"/utf8>>],
                    [<<"7500"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-9989"/utf8>>,
                <<"Macedonia"/utf8>>,
                [[<<"0"/utf8>>, <<"0"/utf8>>],
                    [<<"100"/utf8>>, <<"199"/utf8>>],
                    [<<"2000"/utf8>>, <<"2999"/utf8>>],
                    [<<"30"/utf8>>, <<"59"/utf8>>],
                    [<<"600"/utf8>>, <<"949"/utf8>>],
                    [<<"9500"/utf8>>, <<"9999"/utf8>>]]},
            {regions,
                <<"978-99901"/utf8>>,
                <<"Bahrain"/utf8>>,
                [[<<"00"/utf8>>, <<"49"/utf8>>],
                    [<<"500"/utf8>>, <<"799"/utf8>>],
                    [<<"80"/utf8>>, <<"99"/utf8>>]]},
            {regions, <<"978-99902"/utf8>>, <<"Reserved Agency"/utf8>>, []},
            {regions,
                <<"978-99903"/utf8>>,
                <<"Mauritius"/utf8>>,
                [[<<"0"/utf8>>, <<"1"/utf8>>],
                    [<<"20"/utf8>>, <<"89"/utf8>>],
                    [<<"900"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99904"/utf8>>,
                <<"Curaçao"/utf8>>,
                [[<<"0"/utf8>>, <<"5"/utf8>>],
                    [<<"60"/utf8>>, <<"89"/utf8>>],
                    [<<"900"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99905"/utf8>>,
                <<"Bolivia"/utf8>>,
                [[<<"0"/utf8>>, <<"3"/utf8>>],
                    [<<"40"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99906"/utf8>>,
                <<"Kuwait"/utf8>>,
                [[<<"0"/utf8>>, <<"2"/utf8>>],
                    [<<"30"/utf8>>, <<"59"/utf8>>],
                    [<<"600"/utf8>>, <<"699"/utf8>>],
                    [<<"70"/utf8>>, <<"89"/utf8>>],
                    [<<"90"/utf8>>, <<"94"/utf8>>],
                    [<<"950"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99908"/utf8>>,
                <<"Malawi"/utf8>>,
                [[<<"0"/utf8>>, <<"0"/utf8>>],
                    [<<"10"/utf8>>, <<"89"/utf8>>],
                    [<<"900"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99909"/utf8>>,
                <<"Malta"/utf8>>,
                [[<<"0"/utf8>>, <<"3"/utf8>>],
                    [<<"40"/utf8>>, <<"94"/utf8>>],
                    [<<"950"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99910"/utf8>>,
                <<"SierraLeone"/utf8>>,
                [[<<"0"/utf8>>, <<"2"/utf8>>],
                    [<<"30"/utf8>>, <<"89"/utf8>>],
                    [<<"900"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99911"/utf8>>,
                <<"Lesotho"/utf8>>,
                [[<<"00"/utf8>>, <<"59"/utf8>>],
                    [<<"600"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99912"/utf8>>,
                <<"Botswana"/utf8>>,
                [[<<"0"/utf8>>, <<"3"/utf8>>],
                    [<<"400"/utf8>>, <<"599"/utf8>>],
                    [<<"60"/utf8>>, <<"89"/utf8>>],
                    [<<"900"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99913"/utf8>>,
                <<"Andorra"/utf8>>,
                [[<<"0"/utf8>>, <<"2"/utf8>>],
                    [<<"30"/utf8>>, <<"35"/utf8>>],
                    [<<"600"/utf8>>, <<"604"/utf8>>]]},
            {regions,
                <<"978-99914"/utf8>>,
                <<"Suriname"/utf8>>,
                [[<<"0"/utf8>>, <<"4"/utf8>>],
                    [<<"50"/utf8>>, <<"89"/utf8>>],
                    [<<"900"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99915"/utf8>>,
                <<"Maldives"/utf8>>,
                [[<<"0"/utf8>>, <<"4"/utf8>>],
                    [<<"50"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99916"/utf8>>,
                <<"Namibia"/utf8>>,
                [[<<"0"/utf8>>, <<"2"/utf8>>],
                    [<<"30"/utf8>>, <<"69"/utf8>>],
                    [<<"700"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99917"/utf8>>,
                <<"Brunei Darussalam"/utf8>>,
                [[<<"0"/utf8>>, <<"2"/utf8>>],
                    [<<"30"/utf8>>, <<"89"/utf8>>],
                    [<<"900"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99918"/utf8>>,
                <<"Faroe Islands"/utf8>>,
                [[<<"0"/utf8>>, <<"3"/utf8>>],
                    [<<"40"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99919"/utf8>>,
                <<"Benin"/utf8>>,
                [[<<"0"/utf8>>, <<"2"/utf8>>],
                    [<<"300"/utf8>>, <<"399"/utf8>>],
                    [<<"40"/utf8>>, <<"69"/utf8>>],
                    [<<"70"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"849"/utf8>>],
                    [<<"850"/utf8>>, <<"899"/utf8>>],
                    [<<"900"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99920"/utf8>>,
                <<"Andorra"/utf8>>,
                [[<<"0"/utf8>>, <<"4"/utf8>>],
                    [<<"50"/utf8>>, <<"89"/utf8>>],
                    [<<"900"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99921"/utf8>>,
                <<"Qatar"/utf8>>,
                [[<<"0"/utf8>>, <<"1"/utf8>>],
                    [<<"20"/utf8>>, <<"69"/utf8>>],
                    [<<"700"/utf8>>, <<"799"/utf8>>],
                    [<<"8"/utf8>>, <<"8"/utf8>>],
                    [<<"90"/utf8>>, <<"99"/utf8>>]]},
            {regions,
                <<"978-99922"/utf8>>,
                <<"Guatemala"/utf8>>,
                [[<<"0"/utf8>>, <<"3"/utf8>>],
                    [<<"40"/utf8>>, <<"69"/utf8>>],
                    [<<"700"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99923"/utf8>>,
                <<"El Salvador"/utf8>>,
                [[<<"0"/utf8>>, <<"1"/utf8>>],
                    [<<"20"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99924"/utf8>>,
                <<"Nicaragua"/utf8>>,
                [[<<"0"/utf8>>, <<"1"/utf8>>],
                    [<<"20"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99925"/utf8>>,
                <<"Paraguay"/utf8>>,
                [[<<"0"/utf8>>, <<"3"/utf8>>],
                    [<<"40"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99926"/utf8>>,
                <<"Honduras"/utf8>>,
                [[<<"0"/utf8>>, <<"0"/utf8>>],
                    [<<"10"/utf8>>, <<"59"/utf8>>],
                    [<<"600"/utf8>>, <<"869"/utf8>>],
                    [<<"87"/utf8>>, <<"89"/utf8>>],
                    [<<"90"/utf8>>, <<"99"/utf8>>]]},
            {regions,
                <<"978-99927"/utf8>>,
                <<"Albania"/utf8>>,
                [[<<"0"/utf8>>, <<"2"/utf8>>],
                    [<<"30"/utf8>>, <<"59"/utf8>>],
                    [<<"600"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99928"/utf8>>,
                <<"Georgia"/utf8>>,
                [[<<"0"/utf8>>, <<"0"/utf8>>],
                    [<<"10"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99929"/utf8>>,
                <<"Mongolia"/utf8>>,
                [[<<"0"/utf8>>, <<"4"/utf8>>],
                    [<<"50"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99930"/utf8>>,
                <<"Armenia"/utf8>>,
                [[<<"0"/utf8>>, <<"4"/utf8>>],
                    [<<"50"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99931"/utf8>>,
                <<"Seychelles"/utf8>>,
                [[<<"0"/utf8>>, <<"4"/utf8>>],
                    [<<"50"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99932"/utf8>>,
                <<"Malta"/utf8>>,
                [[<<"0"/utf8>>, <<"0"/utf8>>],
                    [<<"10"/utf8>>, <<"59"/utf8>>],
                    [<<"600"/utf8>>, <<"699"/utf8>>],
                    [<<"7"/utf8>>, <<"7"/utf8>>],
                    [<<"80"/utf8>>, <<"99"/utf8>>]]},
            {regions,
                <<"978-99933"/utf8>>,
                <<"Nepal"/utf8>>,
                [[<<"0"/utf8>>, <<"2"/utf8>>],
                    [<<"30"/utf8>>, <<"59"/utf8>>],
                    [<<"600"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99934"/utf8>>,
                <<"Dominican Republic"/utf8>>,
                [[<<"0"/utf8>>, <<"1"/utf8>>],
                    [<<"20"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99935"/utf8>>,
                <<"Haiti"/utf8>>,
                [[<<"0"/utf8>>, <<"2"/utf8>>],
                    [<<"30"/utf8>>, <<"59"/utf8>>],
                    [<<"600"/utf8>>, <<"699"/utf8>>],
                    [<<"7"/utf8>>, <<"8"/utf8>>],
                    [<<"90"/utf8>>, <<"99"/utf8>>]]},
            {regions,
                <<"978-99936"/utf8>>,
                <<"Bhutan"/utf8>>,
                [[<<"0"/utf8>>, <<"0"/utf8>>],
                    [<<"10"/utf8>>, <<"59"/utf8>>],
                    [<<"600"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99937"/utf8>>,
                <<"Macau"/utf8>>,
                [[<<"0"/utf8>>, <<"1"/utf8>>],
                    [<<"20"/utf8>>, <<"59"/utf8>>],
                    [<<"600"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99938"/utf8>>,
                <<"Srpska, Republicof"/utf8>>,
                [[<<"0"/utf8>>, <<"1"/utf8>>],
                    [<<"20"/utf8>>, <<"59"/utf8>>],
                    [<<"600"/utf8>>, <<"899"/utf8>>],
                    [<<"90"/utf8>>, <<"99"/utf8>>]]},
            {regions,
                <<"978-99939"/utf8>>,
                <<"Guatemala"/utf8>>,
                [[<<"0"/utf8>>, <<"5"/utf8>>],
                    [<<"60"/utf8>>, <<"89"/utf8>>],
                    [<<"900"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99940"/utf8>>,
                <<"Georgia"/utf8>>,
                [[<<"0"/utf8>>, <<"0"/utf8>>],
                    [<<"10"/utf8>>, <<"69"/utf8>>],
                    [<<"700"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99941"/utf8>>,
                <<"Armenia"/utf8>>,
                [[<<"0"/utf8>>, <<"2"/utf8>>],
                    [<<"30"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99942"/utf8>>,
                <<"Sudan"/utf8>>,
                [[<<"0"/utf8>>, <<"4"/utf8>>],
                    [<<"50"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99943"/utf8>>,
                <<"Albania"/utf8>>,
                [[<<"0"/utf8>>, <<"2"/utf8>>],
                    [<<"30"/utf8>>, <<"59"/utf8>>],
                    [<<"600"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99944"/utf8>>,
                <<"Ethiopia"/utf8>>,
                [[<<"0"/utf8>>, <<"4"/utf8>>],
                    [<<"50"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99945"/utf8>>,
                <<"Namibia"/utf8>>,
                [[<<"0"/utf8>>, <<"5"/utf8>>],
                    [<<"60"/utf8>>, <<"89"/utf8>>],
                    [<<"900"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99946"/utf8>>,
                <<"Nepal"/utf8>>,
                [[<<"0"/utf8>>, <<"2"/utf8>>],
                    [<<"30"/utf8>>, <<"59"/utf8>>],
                    [<<"600"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99947"/utf8>>,
                <<"Tajikistan"/utf8>>,
                [[<<"0"/utf8>>, <<"2"/utf8>>],
                    [<<"30"/utf8>>, <<"69"/utf8>>],
                    [<<"700"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99948"/utf8>>,
                <<"Eritrea"/utf8>>,
                [[<<"0"/utf8>>, <<"4"/utf8>>],
                    [<<"50"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99949"/utf8>>,
                <<"Mauritius"/utf8>>,
                [[<<"0"/utf8>>, <<"1"/utf8>>],
                    [<<"20"/utf8>>, <<"89"/utf8>>],
                    [<<"900"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99950"/utf8>>,
                <<"Cambodia"/utf8>>,
                [[<<"0"/utf8>>, <<"4"/utf8>>],
                    [<<"50"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"999"/utf8>>]]},
            {regions, <<"978-99951"/utf8>>, <<"Reserved Agency"/utf8>>, []},
            {regions,
                <<"978-99952"/utf8>>,
                <<"Mali"/utf8>>,
                [[<<"0"/utf8>>, <<"4"/utf8>>],
                    [<<"50"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99953"/utf8>>,
                <<"Paraguay"/utf8>>,
                [[<<"0"/utf8>>, <<"2"/utf8>>],
                    [<<"30"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"939"/utf8>>],
                    [<<"94"/utf8>>, <<"99"/utf8>>]]},
            {regions,
                <<"978-99954"/utf8>>,
                <<"Bolivia"/utf8>>,
                [[<<"0"/utf8>>, <<"2"/utf8>>],
                    [<<"30"/utf8>>, <<"69"/utf8>>],
                    [<<"700"/utf8>>, <<"879"/utf8>>],
                    [<<"88"/utf8>>, <<"99"/utf8>>]]},
            {regions,
                <<"978-99955"/utf8>>,
                <<"Srpska, Republicof"/utf8>>,
                [[<<"0"/utf8>>, <<"1"/utf8>>],
                    [<<"20"/utf8>>, <<"59"/utf8>>],
                    [<<"600"/utf8>>, <<"799"/utf8>>],
                    [<<"80"/utf8>>, <<"99"/utf8>>]]},
            {regions,
                <<"978-99956"/utf8>>,
                <<"Albania"/utf8>>,
                [[<<"00"/utf8>>, <<"59"/utf8>>],
                    [<<"600"/utf8>>, <<"859"/utf8>>],
                    [<<"86"/utf8>>, <<"99"/utf8>>]]},
            {regions,
                <<"978-99957"/utf8>>,
                <<"Malta"/utf8>>,
                [[<<"0"/utf8>>, <<"1"/utf8>>],
                    [<<"20"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99958"/utf8>>,
                <<"Bahrain"/utf8>>,
                [[<<"0"/utf8>>, <<"4"/utf8>>],
                    [<<"50"/utf8>>, <<"93"/utf8>>],
                    [<<"940"/utf8>>, <<"949"/utf8>>],
                    [<<"950"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99959"/utf8>>,
                <<"Luxembourg"/utf8>>,
                [[<<"0"/utf8>>, <<"2"/utf8>>],
                    [<<"30"/utf8>>, <<"59"/utf8>>],
                    [<<"600"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99960"/utf8>>,
                <<"Malawi"/utf8>>,
                [[<<"0"/utf8>>, <<"0"/utf8>>],
                    [<<"10"/utf8>>, <<"94"/utf8>>],
                    [<<"950"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99961"/utf8>>,
                <<"El Salvador"/utf8>>,
                [[<<"0"/utf8>>, <<"3"/utf8>>],
                    [<<"40"/utf8>>, <<"89"/utf8>>],
                    [<<"900"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99962"/utf8>>,
                <<"Mongolia"/utf8>>,
                [[<<"0"/utf8>>, <<"4"/utf8>>],
                    [<<"50"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99963"/utf8>>,
                <<"Cambodia"/utf8>>,
                [[<<"00"/utf8>>, <<"49"/utf8>>],
                    [<<"500"/utf8>>, <<"919"/utf8>>],
                    [<<"92"/utf8>>, <<"99"/utf8>>]]},
            {regions,
                <<"978-99964"/utf8>>,
                <<"Nicaragua"/utf8>>,
                [[<<"0"/utf8>>, <<"1"/utf8>>],
                    [<<"20"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99965"/utf8>>,
                <<"Macau"/utf8>>,
                [[<<"0"/utf8>>, <<"3"/utf8>>],
                    [<<"40"/utf8>>, <<"62"/utf8>>],
                    [<<"630"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99966"/utf8>>,
                <<"Kuwait"/utf8>>,
                [[<<"0"/utf8>>, <<"2"/utf8>>],
                    [<<"30"/utf8>>, <<"69"/utf8>>],
                    [<<"700"/utf8>>, <<"799"/utf8>>],
                    [<<"80"/utf8>>, <<"94"/utf8>>]]},
            {regions,
                <<"978-99967"/utf8>>,
                <<"Paraguay"/utf8>>,
                [[<<"0"/utf8>>, <<"1"/utf8>>],
                    [<<"20"/utf8>>, <<"59"/utf8>>],
                    [<<"600"/utf8>>, <<"899"/utf8>>]]},
            {regions,
                <<"978-99968"/utf8>>,
                <<"Botswana"/utf8>>,
                [[<<"0"/utf8>>, <<"3"/utf8>>],
                    [<<"400"/utf8>>, <<"599"/utf8>>],
                    [<<"60"/utf8>>, <<"89"/utf8>>],
                    [<<"900"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99969"/utf8>>,
                <<"Oman"/utf8>>,
                [[<<"0"/utf8>>, <<"4"/utf8>>],
                    [<<"50"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99970"/utf8>>,
                <<"Haiti"/utf8>>,
                [[<<"0"/utf8>>, <<"4"/utf8>>],
                    [<<"50"/utf8>>, <<"89"/utf8>>],
                    [<<"900"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99971"/utf8>>,
                <<"Myanmar"/utf8>>,
                [[<<"0"/utf8>>, <<"5"/utf8>>],
                    [<<"60"/utf8>>, <<"84"/utf8>>],
                    [<<"850"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99972"/utf8>>,
                <<"Faroe Islands"/utf8>>,
                [[<<"0"/utf8>>, <<"4"/utf8>>],
                    [<<"50"/utf8>>, <<"89"/utf8>>],
                    [<<"900"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99973"/utf8>>,
                <<"Mongolia"/utf8>>,
                [[<<"0"/utf8>>, <<"3"/utf8>>],
                    [<<"40"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99974"/utf8>>,
                <<"Bolivia"/utf8>>,
                [[<<"40"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99975"/utf8>>,
                <<"Tajikistan"/utf8>>,
                [[<<"0"/utf8>>, <<"3"/utf8>>],
                    [<<"40"/utf8>>, <<"79"/utf8>>],
                    [<<"800"/utf8>>, <<"999"/utf8>>]]},
            {regions,
                <<"978-99976"/utf8>>,
                <<"Srpska, Republicof"/utf8>>,
                [[<<"0"/utf8>>, <<"1"/utf8>>],
                    [<<"20"/utf8>>, <<"59"/utf8>>],
                    [<<"600"/utf8>>, <<"799"/utf8>>]]},
            {regions,
                <<"978-99977"/utf8>>,
                <<"Rwanda"/utf8>>,
                [[<<"0"/utf8>>, <<"1"/utf8>>],
                    [<<"40"/utf8>>, <<"69"/utf8>>],
                    [<<"700"/utf8>>, <<"799"/utf8>>]]},
            {regions,
                <<"979-10"/utf8>>,
                <<"France"/utf8>>,
                [[<<"00"/utf8>>, <<"19"/utf8>>],
                    [<<"200"/utf8>>, <<"699"/utf8>>],
                    [<<"7000"/utf8>>, <<"8999"/utf8>>],
                    [<<"90000"/utf8>>, <<"97599"/utf8>>],
                    [<<"976000"/utf8>>, <<"999999"/utf8>>]]},
            {regions,
                <<"979-11"/utf8>>,
                <<"Korea, Republic"/utf8>>,
                [[<<"00"/utf8>>, <<"24"/utf8>>],
                    [<<"250"/utf8>>, <<"549"/utf8>>],
                    [<<"5500"/utf8>>, <<"8499"/utf8>>],
                    [<<"85000"/utf8>>, <<"94999"/utf8>>],
                    [<<"950000"/utf8>>, <<"999999"/utf8>>]]},
            {regions,
                <<"979-12"/utf8>>,
                <<"Italy"/utf8>>,
                [[<<"200"/utf8>>, <<"200"/utf8>>]]}],
        fun(X) -> erlang:element(2, X) =:= Prefix end
    ),
    {ok, Region} = case _assert_subject@1 of
        {ok, _} -> _assert_subject@1;
        _assert_fail@1 ->
            erlang:error(#{gleam_error => let_assert,
                        message => <<"Assertion pattern match failed"/utf8>>,
                        value => _assert_fail@1,
                        module => <<"glisbn"/utf8>>,
                        function => <<"get_info"/utf8>>,
                        line => 417})
    end,
    Region.

-spec get_publisher_zone(binary()) -> {ok, binary()} | {error, isbn_error()}.
get_publisher_zone(Isbn) ->
    case is_correct(Isbn) of
        true ->
            Prepared_isbn = case is_isbn10(Isbn) of
                true ->
                    _assert_subject = isbn10_to_13(Isbn),
                    {ok, Result} = case _assert_subject of
                        {ok, _} -> _assert_subject;
                        _assert_fail ->
                            erlang:error(#{gleam_error => let_assert,
                                        message => <<"Assertion pattern match failed"/utf8>>,
                                        value => _assert_fail,
                                        module => <<"glisbn"/utf8>>,
                                        function => <<"get_publisher_zone"/utf8>>,
                                        line => 203})
                    end,
                    Result;

                false ->
                    normalize(Isbn)
            end,
            {ok, erlang:element(3, get_info(Prepared_isbn))};

        false ->
            {error, invalid_isbn}
    end.

-spec get_ranges(binary()) -> list(list(binary())).
get_ranges(Isbn) ->
    erlang:element(4, get_info(Isbn)).

-spec get_registrant_element(binary()) -> {ok, binary()} | {error, isbn_error()}.
get_registrant_element(Isbn) ->
    case is_correct(Isbn) of
        true ->
            Prepared_isbn = case is_isbn10(Isbn) of
                true ->
                    _assert_subject = isbn10_to_13(Isbn),
                    {ok, Result} = case _assert_subject of
                        {ok, _} -> _assert_subject;
                        _assert_fail ->
                            erlang:error(#{gleam_error => let_assert,
                                        message => <<"Assertion pattern match failed"/utf8>>,
                                        value => _assert_fail,
                                        module => <<"glisbn"/utf8>>,
                                        function => <<"get_registrant_element"/utf8>>,
                                        line => 220})
                    end,
                    Result;

                false ->
                    normalize(Isbn)
            end,
            _assert_subject@1 = get_prefix(Prepared_isbn),
            {ok, Prefix} = case _assert_subject@1 of
                {ok, _} -> _assert_subject@1;
                _assert_fail@1 ->
                    erlang:error(#{gleam_error => let_assert,
                                message => <<"Assertion pattern match failed"/utf8>>,
                                value => _assert_fail@1,
                                module => <<"glisbn"/utf8>>,
                                function => <<"get_registrant_element"/utf8>>,
                                line => 226})
            end,
            Ranges = get_ranges(Prepared_isbn),
            Body = get_body(Prepared_isbn, Prefix),
            case gleam@list:find(
                Ranges,
                fun(Range) ->
                    _assert_subject@2 = gleam@list:first(Range),
                    {ok, First_part} = case _assert_subject@2 of
                        {ok, _} -> _assert_subject@2;
                        _assert_fail@2 ->
                            erlang:error(#{gleam_error => let_assert,
                                        message => <<"Assertion pattern match failed"/utf8>>,
                                        value => _assert_fail@2,
                                        module => <<"glisbn"/utf8>>,
                                        function => <<"get_registrant_element"/utf8>>,
                                        line => 232})
                    end,
                    _assert_subject@3 = gleam@int:parse(First_part),
                    {ok, Begin} = case _assert_subject@3 of
                        {ok, _} -> _assert_subject@3;
                        _assert_fail@3 ->
                            erlang:error(#{gleam_error => let_assert,
                                        message => <<"Assertion pattern match failed"/utf8>>,
                                        value => _assert_fail@3,
                                        module => <<"glisbn"/utf8>>,
                                        function => <<"get_registrant_element"/utf8>>,
                                        line => 233})
                    end,
                    _assert_subject@4 = gleam@list:last(Range),
                    {ok, Last_part} = case _assert_subject@4 of
                        {ok, _} -> _assert_subject@4;
                        _assert_fail@4 ->
                            erlang:error(#{gleam_error => let_assert,
                                        message => <<"Assertion pattern match failed"/utf8>>,
                                        value => _assert_fail@4,
                                        module => <<"glisbn"/utf8>>,
                                        function => <<"get_registrant_element"/utf8>>,
                                        line => 235})
                    end,
                    _assert_subject@5 = gleam@int:parse(Last_part),
                    {ok, End} = case _assert_subject@5 of
                        {ok, _} -> _assert_subject@5;
                        _assert_fail@5 ->
                            erlang:error(#{gleam_error => let_assert,
                                        message => <<"Assertion pattern match failed"/utf8>>,
                                        value => _assert_fail@5,
                                        module => <<"glisbn"/utf8>>,
                                        function => <<"get_registrant_element"/utf8>>,
                                        line => 236})
                    end,
                    Length = gleam@string:length(Last_part),
                    Range_part = gleam@string:slice(Body, 0, Length),
                    _assert_subject@6 = gleam@int:parse(Range_part),
                    {ok, Area} = case _assert_subject@6 of
                        {ok, _} -> _assert_subject@6;
                        _assert_fail@6 ->
                            erlang:error(#{gleam_error => let_assert,
                                        message => <<"Assertion pattern match failed"/utf8>>,
                                        value => _assert_fail@6,
                                        module => <<"glisbn"/utf8>>,
                                        function => <<"get_registrant_element"/utf8>>,
                                        line => 240})
                    end,
                    (Begin =< Area) andalso (Area =< End)
                end
            ) of
                {ok, Range@1} ->
                    _assert_subject@7 = gleam@list:last(Range@1),
                    {ok, Last_part@1} = case _assert_subject@7 of
                        {ok, _} -> _assert_subject@7;
                        _assert_fail@7 ->
                            erlang:error(#{gleam_error => let_assert,
                                        message => <<"Assertion pattern match failed"/utf8>>,
                                        value => _assert_fail@7,
                                        module => <<"glisbn"/utf8>>,
                                        function => <<"get_registrant_element"/utf8>>,
                                        line => 246})
                    end,
                    Length@1 = gleam@string:length(Last_part@1),
                    Range_part@1 = gleam@string:slice(Body, 0, Length@1),
                    {ok, Range_part@1};

                {error, _} ->
                    {error, registrant_not_found}
            end;

        false ->
            {error, invalid_isbn}
    end.

-spec get_publication_element(binary()) -> {ok, binary()} |
    {error, isbn_error()}.
get_publication_element(Isbn) ->
    case is_correct(Isbn) of
        true ->
            Prepared_isbn = case is_isbn10(Isbn) of
                true ->
                    _assert_subject = isbn10_to_13(Isbn),
                    {ok, Result} = case _assert_subject of
                        {ok, _} -> _assert_subject;
                        _assert_fail ->
                            erlang:error(#{gleam_error => let_assert,
                                        message => <<"Assertion pattern match failed"/utf8>>,
                                        value => _assert_fail,
                                        module => <<"glisbn"/utf8>>,
                                        function => <<"get_publication_element"/utf8>>,
                                        line => 264})
                    end,
                    Result;

                false ->
                    normalize(Isbn)
            end,
            _assert_subject@1 = get_prefix(Prepared_isbn),
            {ok, Prefix} = case _assert_subject@1 of
                {ok, _} -> _assert_subject@1;
                _assert_fail@1 ->
                    erlang:error(#{gleam_error => let_assert,
                                message => <<"Assertion pattern match failed"/utf8>>,
                                value => _assert_fail@1,
                                module => <<"glisbn"/utf8>>,
                                function => <<"get_publication_element"/utf8>>,
                                line => 270})
            end,
            Body = get_body(Prepared_isbn, Prefix),
            _assert_subject@2 = get_registrant_element(Prepared_isbn),
            {ok, Registrant} = case _assert_subject@2 of
                {ok, _} -> _assert_subject@2;
                _assert_fail@2 ->
                    erlang:error(#{gleam_error => let_assert,
                                message => <<"Assertion pattern match failed"/utf8>>,
                                value => _assert_fail@2,
                                module => <<"glisbn"/utf8>>,
                                function => <<"get_publication_element"/utf8>>,
                                line => 272})
            end,
            {ok, drop_chars(Body, gleam@string:length(Registrant))};

        false ->
            {error, invalid_isbn}
    end.

-spec hyphenate_isbn13(binary()) -> {ok, binary()} | {error, isbn_error()}.
hyphenate_isbn13(Isbn) ->
    case is_correct(Isbn) of
        true ->
            _assert_subject = get_prefix(Isbn),
            {ok, Prefix} = case _assert_subject of
                {ok, _} -> _assert_subject;
                _assert_fail ->
                    erlang:error(#{gleam_error => let_assert,
                                message => <<"Assertion pattern match failed"/utf8>>,
                                value => _assert_fail,
                                module => <<"glisbn"/utf8>>,
                                function => <<"hyphenate_isbn13"/utf8>>,
                                line => 428})
            end,
            _assert_subject@1 = get_registrant_element(Isbn),
            {ok, Registrant_element} = case _assert_subject@1 of
                {ok, _} -> _assert_subject@1;
                _assert_fail@1 ->
                    erlang:error(#{gleam_error => let_assert,
                                message => <<"Assertion pattern match failed"/utf8>>,
                                value => _assert_fail@1,
                                module => <<"glisbn"/utf8>>,
                                function => <<"hyphenate_isbn13"/utf8>>,
                                line => 429})
            end,
            _assert_subject@2 = get_publication_element(Isbn),
            {ok, Publication_element} = case _assert_subject@2 of
                {ok, _} -> _assert_subject@2;
                _assert_fail@2 ->
                    erlang:error(#{gleam_error => let_assert,
                                message => <<"Assertion pattern match failed"/utf8>>,
                                value => _assert_fail@2,
                                module => <<"glisbn"/utf8>>,
                                function => <<"hyphenate_isbn13"/utf8>>,
                                line => 430})
            end,
            _assert_subject@3 = get_checkdigit(Isbn),
            {ok, Checkdigit} = case _assert_subject@3 of
                {ok, _} -> _assert_subject@3;
                _assert_fail@3 ->
                    erlang:error(#{gleam_error => let_assert,
                                message => <<"Assertion pattern match failed"/utf8>>,
                                value => _assert_fail@3,
                                module => <<"glisbn"/utf8>>,
                                function => <<"hyphenate_isbn13"/utf8>>,
                                line => 431})
            end,
            {ok,
                gleam@string:join(
                    [Prefix,
                        Registrant_element,
                        Publication_element,
                        Checkdigit],
                    <<"-"/utf8>>
                )};

        false ->
            {error, invalid_isbn}
    end.

-spec hyphenate_isbn10(binary()) -> {ok, binary()} | {error, isbn_error()}.
hyphenate_isbn10(Isbn) ->
    case is_correct(Isbn) of
        true ->
            _assert_subject = isbn10_to_13(Isbn),
            {ok, Isbn13} = case _assert_subject of
                {ok, _} -> _assert_subject;
                _assert_fail ->
                    erlang:error(#{gleam_error => let_assert,
                                message => <<"Assertion pattern match failed"/utf8>>,
                                value => _assert_fail,
                                module => <<"glisbn"/utf8>>,
                                function => <<"hyphenate_isbn10"/utf8>>,
                                line => 445})
            end,
            _assert_subject@1 = get_prefix(Isbn13),
            {ok, Fullprefix} = case _assert_subject@1 of
                {ok, _} -> _assert_subject@1;
                _assert_fail@1 ->
                    erlang:error(#{gleam_error => let_assert,
                                message => <<"Assertion pattern match failed"/utf8>>,
                                value => _assert_fail@1,
                                module => <<"glisbn"/utf8>>,
                                function => <<"hyphenate_isbn10"/utf8>>,
                                line => 446})
            end,
            _assert_subject@2 = begin
                _pipe = gleam@string:split(Fullprefix, <<"-"/utf8>>),
                gleam@list:last(_pipe)
            end,
            {ok, Isbn10_prefix} = case _assert_subject@2 of
                {ok, _} -> _assert_subject@2;
                _assert_fail@2 ->
                    erlang:error(#{gleam_error => let_assert,
                                message => <<"Assertion pattern match failed"/utf8>>,
                                value => _assert_fail@2,
                                module => <<"glisbn"/utf8>>,
                                function => <<"hyphenate_isbn10"/utf8>>,
                                line => 447})
            end,
            _assert_subject@3 = get_registrant_element(Isbn),
            {ok, Registrant_element} = case _assert_subject@3 of
                {ok, _} -> _assert_subject@3;
                _assert_fail@3 ->
                    erlang:error(#{gleam_error => let_assert,
                                message => <<"Assertion pattern match failed"/utf8>>,
                                value => _assert_fail@3,
                                module => <<"glisbn"/utf8>>,
                                function => <<"hyphenate_isbn10"/utf8>>,
                                line => 451})
            end,
            _assert_subject@4 = get_publication_element(Isbn),
            {ok, Publication_element} = case _assert_subject@4 of
                {ok, _} -> _assert_subject@4;
                _assert_fail@4 ->
                    erlang:error(#{gleam_error => let_assert,
                                message => <<"Assertion pattern match failed"/utf8>>,
                                value => _assert_fail@4,
                                module => <<"glisbn"/utf8>>,
                                function => <<"hyphenate_isbn10"/utf8>>,
                                line => 452})
            end,
            _assert_subject@5 = get_checkdigit(Isbn),
            {ok, Checkdigit} = case _assert_subject@5 of
                {ok, _} -> _assert_subject@5;
                _assert_fail@5 ->
                    erlang:error(#{gleam_error => let_assert,
                                message => <<"Assertion pattern match failed"/utf8>>,
                                value => _assert_fail@5,
                                module => <<"glisbn"/utf8>>,
                                function => <<"hyphenate_isbn10"/utf8>>,
                                line => 453})
            end,
            {ok,
                gleam@string:join(
                    [Isbn10_prefix,
                        Registrant_element,
                        Publication_element,
                        Checkdigit],
                    <<"-"/utf8>>
                )};

        false ->
            {error, invalid_isbn}
    end.

-spec hyphenate(binary()) -> {ok, binary()} | {error, isbn_error()}.
hyphenate(Isbn) ->
    case is_correct(Isbn) of
        true ->
            case is_isbn10(Isbn) of
                true ->
                    hyphenate_isbn10(Isbn);

                false ->
                    hyphenate_isbn13(Isbn)
            end;

        false ->
            {error, invalid_isbn}
    end.

-spec is_hyphens_correct(binary()) -> boolean().
is_hyphens_correct(Isbn) ->
    case is_correct(Isbn) of
        true ->
            case hyphenate(Isbn) of
                {ok, Result} ->
                    Isbn =:= Result;

                {error, _} ->
                    false
            end;

        false ->
            false
    end.
